{"version":3,"file":"static/js/776.a080e4a4.chunk.js","mappings":"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","sources":["../../src/decoder/codecs/openjpeg.js","../../node_modules/node-fetch/browser.js"],"sourcesContent":["// MIT License\n\n// Copyright (c) 2020 Chris Hafey\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/* istanbul ignore file */\n\n/* eslint-disable */\nimport raw from \"raw.macro\";\n\n\nvar OpenJPEGWASM = (function () {\n\tvar _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n\tif (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n\treturn (\n\t\tfunction (OpenJPEGWASM) {\n\t\t\tOpenJPEGWASM = OpenJPEGWASM || {};\n\n\t\t\tvar Module = typeof OpenJPEGWASM !== \"undefined\" ? OpenJPEGWASM : {};\n\t\t\tvar moduleOverrides = {};\n\t\t\tvar key;\n\t\t\tfor (key in Module) {\n\t\t\t\tif (Module.hasOwnProperty(key)) {\n\t\t\t\t\tmoduleOverrides[key] = Module[key]\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar arguments_ = [];\n\t\t\tvar thisProgram = \"./this.program\";\n\t\t\tvar quit_ = function (status, toThrow) {\n\t\t\t\tthrow toThrow\n\t\t\t};\n\t\t\tvar ENVIRONMENT_IS_WEB = false;\n\t\t\tvar ENVIRONMENT_IS_WORKER = false;\n\t\t\tvar ENVIRONMENT_IS_NODE = false;\n\t\t\tvar ENVIRONMENT_HAS_NODE = false;\n\t\t\tvar ENVIRONMENT_IS_SHELL = false;\n\t\t\tENVIRONMENT_IS_WEB = typeof window === \"object\";\n\t\t\tENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n\t\t\tENVIRONMENT_HAS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n\t\t\tENVIRONMENT_IS_NODE = ENVIRONMENT_HAS_NODE && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;\n\t\t\tENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\n\t\t\tif (ENVIRONMENT_IS_NODE && globalThis && !globalThis.fetch) {\n\t\t\t\tglobalThis.fetch = require(\"node-fetch\");\n\t\t\t}\n\n\t\t\tvar scriptDirectory = \"\";\n\n\t\t\tfunction locateFile(path) {\n\t\t\t\tif (Module[\"locateFile\"]) {\n\t\t\t\t\treturn Module[\"locateFile\"](path, scriptDirectory)\n\t\t\t\t}\n\t\t\t\treturn scriptDirectory + path\n\t\t\t}\n\t\t\tvar read_, readAsync, readBinary, setWindowTitle;\n\t\t\tvar nodeFS;\n\t\t\tvar nodePath;\n\t\t\tif (ENVIRONMENT_HAS_NODE) {\n\t\t\t\tscriptDirectory = __dirname + \"/\";\n\t\t\t\tread_ = function shell_read(filename, binary) {\n\t\t\t\t\tif (!nodeFS) nodeFS = require(\"fs\");\n\t\t\t\t\tif (!nodePath) nodePath = require(\"path\");\n\t\t\t\t\tfilename = nodePath[\"normalize\"](filename);\n\t\t\t\t\treturn nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\")\n\t\t\t\t};\n\t\t\t\treadBinary = function readBinary(filename) {\n\t\t\t\t\tvar ret = read_(filename, true);\n\t\t\t\t\tif (!ret.buffer) {\n\t\t\t\t\t\tret = new Uint8Array(ret)\n\t\t\t\t\t}\n\t\t\t\t\tassert(ret.buffer);\n\t\t\t\t\treturn ret\n\t\t\t\t};\n\t\t\t\tif (process[\"argv\"].length > 1) {\n\t\t\t\t\tthisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\")\n\t\t\t\t}\n\t\t\t\targuments_ = process[\"argv\"].slice(2);\n\t\t\t\tprocess[\"on\"](\"uncaughtException\", function (ex) {\n\t\t\t\t\tif (!(ex instanceof ExitStatus)) {\n\t\t\t\t\t\tthrow ex\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tprocess[\"on\"](\"unhandledRejection\", abort);\n\t\t\t\tquit_ = function (status) {\n\t\t\t\t\tprocess[\"exit\"](status)\n\t\t\t\t};\n\t\t\t\tModule[\"inspect\"] = function () {\n\t\t\t\t\treturn \"[Emscripten Module object]\"\n\t\t\t\t}\n\t\t\t} else if (ENVIRONMENT_IS_SHELL) {\n\t\t\t\tif (typeof read != \"undefined\") {\n\t\t\t\t\tread_ = function shell_read(f) {\n\t\t\t\t\t\treturn read(f)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treadBinary = function readBinary(f) {\n\t\t\t\t\tvar data;\n\t\t\t\t\tif (typeof readbuffer === \"function\") {\n\t\t\t\t\t\treturn new Uint8Array(readbuffer(f))\n\t\t\t\t\t}\n\t\t\t\t\tdata = read(f, \"binary\");\n\t\t\t\t\tassert(typeof data === \"object\");\n\t\t\t\t\treturn data\n\t\t\t\t};\n\t\t\t\tif (typeof scriptArgs != \"undefined\") {\n\t\t\t\t\targuments_ = scriptArgs\n\t\t\t\t} else if (typeof arguments != \"undefined\") {\n\t\t\t\t\targuments_ = arguments\n\t\t\t\t}\n\t\t\t\tif (typeof quit === \"function\") {\n\t\t\t\t\tquit_ = function (status) {\n\t\t\t\t\t\tquit(status)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (typeof print !== \"undefined\") {\n\t\t\t\t\tif (typeof console === \"undefined\") console = {};\n\t\t\t\t\tconsole.log = print;\n\t\t\t\t\tconsole.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print\n\t\t\t\t}\n\t\t\t} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n\t\t\t\tif (ENVIRONMENT_IS_WORKER) {\n\t\t\t\t\tscriptDirectory = self.location.href\n\t\t\t\t} else if (document.currentScript) {\n\t\t\t\t\tscriptDirectory = document.currentScript.src\n\t\t\t\t}\n\t\t\t\tif (_scriptDir) {\n\t\t\t\t\tscriptDirectory = _scriptDir\n\t\t\t\t}\n\t\t\t\tif (scriptDirectory.indexOf(\"blob:\") !== 0) {\n\t\t\t\t\tscriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1)\n\t\t\t\t} else {\n\t\t\t\t\tscriptDirectory = \"\"\n\t\t\t\t} {\n\t\t\t\t\tread_ = function shell_read(url) {\n\t\t\t\t\t\tvar xhr = new XMLHttpRequest;\n\t\t\t\t\t\txhr.open(\"GET\", url, false);\n\t\t\t\t\t\txhr.send(null);\n\t\t\t\t\t\treturn xhr.responseText\n\t\t\t\t\t};\n\t\t\t\t\tif (ENVIRONMENT_IS_WORKER) {\n\t\t\t\t\t\treadBinary = function readBinary(url) {\n\t\t\t\t\t\t\tvar xhr = new XMLHttpRequest;\n\t\t\t\t\t\t\txhr.open(\"GET\", url, false);\n\t\t\t\t\t\t\txhr.responseType = \"arraybuffer\";\n\t\t\t\t\t\t\txhr.send(null);\n\t\t\t\t\t\t\treturn new Uint8Array(xhr.response)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treadAsync = function readAsync(url, onload, onerror) {\n\t\t\t\t\t\tvar xhr = new XMLHttpRequest;\n\t\t\t\t\t\txhr.open(\"GET\", url, true);\n\t\t\t\t\t\txhr.responseType = \"arraybuffer\";\n\t\t\t\t\t\txhr.onload = function xhr_onload() {\n\t\t\t\t\t\t\tif (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n\t\t\t\t\t\t\t\tonload(xhr.response);\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonerror()\n\t\t\t\t\t\t};\n\t\t\t\t\t\txhr.onerror = onerror;\n\t\t\t\t\t\txhr.send(null)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetWindowTitle = function (title) {\n\t\t\t\t\tdocument.title = title\n\t\t\t\t}\n\t\t\t} else {}\n\t\t\t// var out = Module[\"print\"] || console.log.bind(console);\n\t\t\tvar out = () => {}; // ignore info for now\n\t\t\tvar err = Module[\"printErr\"] || console.warn.bind(console);\n\t\t\tfor (key in moduleOverrides) {\n\t\t\t\tif (moduleOverrides.hasOwnProperty(key)) {\n\t\t\t\t\tModule[key] = moduleOverrides[key]\n\t\t\t\t}\n\t\t\t}\n\t\t\tmoduleOverrides = null;\n\t\t\tif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n\t\t\tif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n\t\t\tif (Module[\"quit\"]) quit_ = Module[\"quit\"];\n\t\t\tvar STACK_ALIGN = 16;\n\n\t\t\tfunction dynamicAlloc(size) {\n\t\t\t\tvar ret = HEAP32[DYNAMICTOP_PTR >> 2];\n\t\t\t\tvar end = ret + size + 15 & -16;\n\t\t\t\tif (end > _emscripten_get_heap_size()) {\n\t\t\t\t\tabort()\n\t\t\t\t}\n\t\t\t\tHEAP32[DYNAMICTOP_PTR >> 2] = end;\n\t\t\t\treturn ret\n\t\t\t}\n\n\t\t\tfunction getNativeTypeSize(type) {\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase \"i1\":\n\t\t\t\t\tcase \"i8\":\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\tcase \"i16\":\n\t\t\t\t\t\treturn 2;\n\t\t\t\t\tcase \"i32\":\n\t\t\t\t\t\treturn 4;\n\t\t\t\t\tcase \"i64\":\n\t\t\t\t\t\treturn 8;\n\t\t\t\t\tcase \"float\":\n\t\t\t\t\t\treturn 4;\n\t\t\t\t\tcase \"double\":\n\t\t\t\t\t\treturn 8;\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tif (type[type.length - 1] === \"*\") {\n\t\t\t\t\t\t\treturn 4\n\t\t\t\t\t\t} else if (type[0] === \"i\") {\n\t\t\t\t\t\t\tvar bits = parseInt(type.substr(1));\n\t\t\t\t\t\t\tassert(bits % 8 === 0, \"getNativeTypeSize invalid bits \" + bits + \", type \" + type);\n\t\t\t\t\t\t\treturn bits / 8\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 0\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction warnOnce(text) {\n\t\t\t\tif (!warnOnce.shown) warnOnce.shown = {};\n\t\t\t\tif (!warnOnce.shown[text]) {\n\t\t\t\t\twarnOnce.shown[text] = 1;\n\t\t\t\t\terr(text)\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar asm2wasmImports = {\n\t\t\t\t\"f64-rem\": function (x, y) {\n\t\t\t\t\treturn x % y\n\t\t\t\t},\n\t\t\t\t\"debugger\": function () {}\n\t\t\t};\n\t\t\tvar jsCallStartIndex = 1;\n\t\t\tvar functionPointers = new Array(0);\n\n\t\t\tfunction convertJsFunctionToWasm(func, sig) {\n\t\t\t\tif (typeof WebAssembly.Function === \"function\") {\n\t\t\t\t\tvar typeNames = {\n\t\t\t\t\t\t\"i\": \"i32\",\n\t\t\t\t\t\t\"j\": \"i64\",\n\t\t\t\t\t\t\"f\": \"f32\",\n\t\t\t\t\t\t\"d\": \"f64\"\n\t\t\t\t\t};\n\t\t\t\t\tvar type = {\n\t\t\t\t\t\tparameters: [],\n\t\t\t\t\t\tresults: sig[0] == \"v\" ? [] : [typeNames[sig[0]]]\n\t\t\t\t\t};\n\t\t\t\t\tfor (var i = 1; i < sig.length; ++i) {\n\t\t\t\t\t\ttype.parameters.push(typeNames[sig[i]])\n\t\t\t\t\t}\n\t\t\t\t\treturn new WebAssembly.Function(type, func)\n\t\t\t\t}\n\t\t\t\tvar typeSection = [1, 0, 1, 96];\n\t\t\t\tvar sigRet = sig.slice(0, 1);\n\t\t\t\tvar sigParam = sig.slice(1);\n\t\t\t\tvar typeCodes = {\n\t\t\t\t\t\"i\": 127,\n\t\t\t\t\t\"j\": 126,\n\t\t\t\t\t\"f\": 125,\n\t\t\t\t\t\"d\": 124\n\t\t\t\t};\n\t\t\t\ttypeSection.push(sigParam.length);\n\t\t\t\tfor (var i = 0; i < sigParam.length; ++i) {\n\t\t\t\t\ttypeSection.push(typeCodes[sigParam[i]])\n\t\t\t\t}\n\t\t\t\tif (sigRet == \"v\") {\n\t\t\t\t\ttypeSection.push(0)\n\t\t\t\t} else {\n\t\t\t\t\ttypeSection = typeSection.concat([1, typeCodes[sigRet]])\n\t\t\t\t}\n\t\t\t\ttypeSection[1] = typeSection.length - 2;\n\t\t\t\tvar bytes = new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0].concat(typeSection, [2, 7, 1, 1, 101, 1, 102, 0, 0, 7, 5, 1, 1, 102, 0, 0]));\n\t\t\t\tvar module = new WebAssembly.Module(bytes);\n\t\t\t\tvar instance = new WebAssembly.Instance(module, {\n\t\t\t\t\t\"e\": {\n\t\t\t\t\t\t\"f\": func\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tvar wrappedFunc = instance.exports[\"f\"];\n\t\t\t\treturn wrappedFunc\n\t\t\t}\n\t\t\tvar funcWrappers = {};\n\n\t\t\tfunction dynCall(sig, ptr, args) {\n\t\t\t\tif (args && args.length) {\n\t\t\t\t\treturn Module[\"dynCall_\" + sig].apply(null, [ptr].concat(args))\n\t\t\t\t} else {\n\t\t\t\t\treturn Module[\"dynCall_\" + sig].call(null, ptr)\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar tempRet0 = 0;\n\t\t\tvar setTempRet0 = function (value) {\n\t\t\t\ttempRet0 = value\n\t\t\t};\n\t\t\tvar getTempRet0 = function () {\n\t\t\t\treturn tempRet0\n\t\t\t};\n\t\t\tvar wasmBinary;\n\t\t\tif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n\t\t\tvar noExitRuntime;\n\t\t\tif (Module[\"noExitRuntime\"]) noExitRuntime = Module[\"noExitRuntime\"];\n\t\t\tif (typeof WebAssembly !== \"object\") {\n\t\t\t\terr(\"no native wasm support detected\")\n\t\t\t}\n\n\t\t\tfunction setValue(ptr, value, type, noSafe) {\n\t\t\t\ttype = type || \"i8\";\n\t\t\t\tif (type.charAt(type.length - 1) === \"*\") type = \"i32\";\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase \"i1\":\n\t\t\t\t\t\tHEAP8[ptr >> 0] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"i8\":\n\t\t\t\t\t\tHEAP8[ptr >> 0] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"i16\":\n\t\t\t\t\t\tHEAP16[ptr >> 1] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"i32\":\n\t\t\t\t\t\tHEAP32[ptr >> 2] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"i64\":\n\t\t\t\t\t\ttempI64 = [value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"float\":\n\t\t\t\t\t\tHEAPF32[ptr >> 2] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"double\":\n\t\t\t\t\t\tHEAPF64[ptr >> 3] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tabort(\"invalid type for setValue: \" + type)\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar wasmMemory;\n\t\t\tvar wasmTable = new WebAssembly.Table({\n\t\t\t\t\"initial\": 370,\n\t\t\t\t\"maximum\": 370,\n\t\t\t\t\"element\": \"anyfunc\"\n\t\t\t});\n\t\t\tvar ABORT = false;\n\t\t\tvar EXITSTATUS = 0;\n\n\t\t\tfunction assert(condition, text) {\n\t\t\t\tif (!condition) {\n\t\t\t\t\tabort(\"Assertion failed: \" + text)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getCFunc(ident) {\n\t\t\t\tvar func = Module[\"_\" + ident];\n\t\t\t\tassert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\n\t\t\t\treturn func\n\t\t\t}\n\n\t\t\tfunction ccall(ident, returnType, argTypes, args, opts) {\n\t\t\t\tvar toC = {\n\t\t\t\t\t\"string\": function (str) {\n\t\t\t\t\t\tvar ret = 0;\n\t\t\t\t\t\tif (str !== null && str !== undefined && str !== 0) {\n\t\t\t\t\t\t\tvar len = (str.length << 2) + 1;\n\t\t\t\t\t\t\tret = stackAlloc(len);\n\t\t\t\t\t\t\tstringToUTF8(str, ret, len)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ret\n\t\t\t\t\t},\n\t\t\t\t\t\"array\": function (arr) {\n\t\t\t\t\t\tvar ret = stackAlloc(arr.length);\n\t\t\t\t\t\twriteArrayToMemory(arr, ret);\n\t\t\t\t\t\treturn ret\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction convertReturnValue(ret) {\n\t\t\t\t\tif (returnType === \"string\") return UTF8ToString(ret);\n\t\t\t\t\tif (returnType === \"boolean\") return Boolean(ret);\n\t\t\t\t\treturn ret\n\t\t\t\t}\n\t\t\t\tvar func = getCFunc(ident);\n\t\t\t\tvar cArgs = [];\n\t\t\t\tvar stack = 0;\n\t\t\t\tif (args) {\n\t\t\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\t\t\tvar converter = toC[argTypes[i]];\n\t\t\t\t\t\tif (converter) {\n\t\t\t\t\t\t\tif (stack === 0) stack = stackSave();\n\t\t\t\t\t\t\tcArgs[i] = converter(args[i])\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcArgs[i] = args[i]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar ret = func.apply(null, cArgs);\n\t\t\t\tret = convertReturnValue(ret);\n\t\t\t\tif (stack !== 0) stackRestore(stack);\n\t\t\t\treturn ret\n\t\t\t}\n\t\t\tvar ALLOC_NONE = 3;\n\n\t\t\tfunction getMemory(size) {\n\t\t\t\tif (!runtimeInitialized) return dynamicAlloc(size);\n\t\t\t\treturn _malloc(size)\n\t\t\t}\n\t\t\tvar UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\n\t\t\tfunction UTF8ArrayToString(u8Array, idx, maxBytesToRead) {\n\t\t\t\tvar endIdx = idx + maxBytesToRead;\n\t\t\t\tvar endPtr = idx;\n\t\t\t\twhile (u8Array[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\t\t\t\tif (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\n\t\t\t\t\treturn UTF8Decoder.decode(u8Array.subarray(idx, endPtr))\n\t\t\t\t} else {\n\t\t\t\t\tvar str = \"\";\n\t\t\t\t\twhile (idx < endPtr) {\n\t\t\t\t\t\tvar u0 = u8Array[idx++];\n\t\t\t\t\t\tif (!(u0 & 128)) {\n\t\t\t\t\t\t\tstr += String.fromCharCode(u0);\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar u1 = u8Array[idx++] & 63;\n\t\t\t\t\t\tif ((u0 & 224) == 192) {\n\t\t\t\t\t\t\tstr += String.fromCharCode((u0 & 31) << 6 | u1);\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar u2 = u8Array[idx++] & 63;\n\t\t\t\t\t\tif ((u0 & 240) == 224) {\n\t\t\t\t\t\t\tu0 = (u0 & 15) << 12 | u1 << 6 | u2\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tu0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u8Array[idx++] & 63\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (u0 < 65536) {\n\t\t\t\t\t\t\tstr += String.fromCharCode(u0)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar ch = u0 - 65536;\n\t\t\t\t\t\t\tstr += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn str\n\t\t\t}\n\n\t\t\tfunction UTF8ToString(ptr, maxBytesToRead) {\n\t\t\t\treturn ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\"\n\t\t\t}\n\n\t\t\tfunction stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\n\t\t\t\tif (!(maxBytesToWrite > 0)) return 0;\n\t\t\t\tvar startIdx = outIdx;\n\t\t\t\tvar endIdx = outIdx + maxBytesToWrite - 1;\n\t\t\t\tfor (var i = 0; i < str.length; ++i) {\n\t\t\t\t\tvar u = str.charCodeAt(i);\n\t\t\t\t\tif (u >= 55296 && u <= 57343) {\n\t\t\t\t\t\tvar u1 = str.charCodeAt(++i);\n\t\t\t\t\t\tu = 65536 + ((u & 1023) << 10) | u1 & 1023\n\t\t\t\t\t}\n\t\t\t\t\tif (u <= 127) {\n\t\t\t\t\t\tif (outIdx >= endIdx) break;\n\t\t\t\t\t\toutU8Array[outIdx++] = u\n\t\t\t\t\t} else if (u <= 2047) {\n\t\t\t\t\t\tif (outIdx + 1 >= endIdx) break;\n\t\t\t\t\t\toutU8Array[outIdx++] = 192 | u >> 6;\n\t\t\t\t\t\toutU8Array[outIdx++] = 128 | u & 63\n\t\t\t\t\t} else if (u <= 65535) {\n\t\t\t\t\t\tif (outIdx + 2 >= endIdx) break;\n\t\t\t\t\t\toutU8Array[outIdx++] = 224 | u >> 12;\n\t\t\t\t\t\toutU8Array[outIdx++] = 128 | u >> 6 & 63;\n\t\t\t\t\t\toutU8Array[outIdx++] = 128 | u & 63\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (outIdx + 3 >= endIdx) break;\n\t\t\t\t\t\toutU8Array[outIdx++] = 240 | u >> 18;\n\t\t\t\t\t\toutU8Array[outIdx++] = 128 | u >> 12 & 63;\n\t\t\t\t\t\toutU8Array[outIdx++] = 128 | u >> 6 & 63;\n\t\t\t\t\t\toutU8Array[outIdx++] = 128 | u & 63\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toutU8Array[outIdx] = 0;\n\t\t\t\treturn outIdx - startIdx\n\t\t\t}\n\n\t\t\tfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n\t\t\t\treturn stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite)\n\t\t\t}\n\n\t\t\tfunction lengthBytesUTF8(str) {\n\t\t\t\tvar len = 0;\n\t\t\t\tfor (var i = 0; i < str.length; ++i) {\n\t\t\t\t\tvar u = str.charCodeAt(i);\n\t\t\t\t\tif (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n\t\t\t\t\tif (u <= 127) ++len;\n\t\t\t\t\telse if (u <= 2047) len += 2;\n\t\t\t\t\telse if (u <= 65535) len += 3;\n\t\t\t\t\telse len += 4\n\t\t\t\t}\n\t\t\t\treturn len\n\t\t\t}\n\t\t\tvar UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\n\t\t\tfunction allocateUTF8(str) {\n\t\t\t\tvar size = lengthBytesUTF8(str) + 1;\n\t\t\t\tvar ret = _malloc(size);\n\t\t\t\tif (ret) stringToUTF8Array(str, HEAP8, ret, size);\n\t\t\t\treturn ret\n\t\t\t}\n\n\t\t\tfunction writeArrayToMemory(array, buffer) {\n\t\t\t\tHEAP8.set(array, buffer)\n\t\t\t}\n\n\t\t\tfunction writeAsciiToMemory(str, buffer, dontAddNull) {\n\t\t\t\tfor (var i = 0; i < str.length; ++i) {\n\t\t\t\t\tHEAP8[buffer++ >> 0] = str.charCodeAt(i)\n\t\t\t\t}\n\t\t\t\tif (!dontAddNull) HEAP8[buffer >> 0] = 0\n\t\t\t}\n\t\t\tvar PAGE_SIZE = 16384;\n\t\t\tvar WASM_PAGE_SIZE = 65536;\n\n\t\t\tfunction alignUp(x, multiple) {\n\t\t\t\tif (x % multiple > 0) {\n\t\t\t\t\tx += multiple - x % multiple\n\t\t\t\t}\n\t\t\t\treturn x\n\t\t\t}\n\t\t\tvar buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\n\t\t\tfunction updateGlobalBufferAndViews(buf) {\n\t\t\t\tbuffer = buf;\n\t\t\t\tModule[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n\t\t\t\tModule[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n\t\t\t\tModule[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n\t\t\t\tModule[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n\t\t\t\tModule[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n\t\t\t\tModule[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n\t\t\t\tModule[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n\t\t\t\tModule[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf)\n\t\t\t}\n\t\t\tvar STACK_BASE = 38704,\n\t\t\t\tDYNAMIC_BASE = 5281584,\n\t\t\t\tDYNAMICTOP_PTR = 38512;\n\t\t\tvar INITIAL_TOTAL_MEMORY = Module[\"TOTAL_MEMORY\"] || 1073741824;\n\t\t\tif (Module[\"wasmMemory\"]) {\n\t\t\t\twasmMemory = Module[\"wasmMemory\"]\n\t\t\t} else {\n\t\t\t\twasmMemory = new WebAssembly.Memory({\n\t\t\t\t\t\"initial\": INITIAL_TOTAL_MEMORY / WASM_PAGE_SIZE\n\t\t\t\t})\n\t\t\t}\n\t\t\tif (wasmMemory) {\n\t\t\t\tbuffer = wasmMemory.buffer\n\t\t\t}\n\t\t\tINITIAL_TOTAL_MEMORY = buffer.byteLength;\n\t\t\tupdateGlobalBufferAndViews(buffer);\n\t\t\tHEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;\n\n\t\t\tfunction callRuntimeCallbacks(callbacks) {\n\t\t\t\twhile (callbacks.length > 0) {\n\t\t\t\t\tvar callback = callbacks.shift();\n\t\t\t\t\tif (typeof callback == \"function\") {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\t\t\t\t\tvar func = callback.func;\n\t\t\t\t\tif (typeof func === \"number\") {\n\t\t\t\t\t\tif (callback.arg === undefined) {\n\t\t\t\t\t\t\tModule[\"dynCall_v\"](func)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tModule[\"dynCall_vi\"](func, callback.arg)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunc(callback.arg === undefined ? null : callback.arg)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar __ATPRERUN__ = [];\n\t\t\tvar __ATINIT__ = [];\n\t\t\tvar __ATMAIN__ = [];\n\t\t\tvar __ATPOSTRUN__ = [];\n\t\t\tvar runtimeInitialized = false;\n\t\t\tvar runtimeExited = false;\n\n\t\t\tfunction preRun() {\n\t\t\t\tif (Module[\"preRun\"]) {\n\t\t\t\t\tif (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n\t\t\t\t\twhile (Module[\"preRun\"].length) {\n\t\t\t\t\t\taddOnPreRun(Module[\"preRun\"].shift())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcallRuntimeCallbacks(__ATPRERUN__)\n\t\t\t}\n\n\t\t\tfunction initRuntime() {\n\t\t\t\truntimeInitialized = true;\n\t\t\t\tcallRuntimeCallbacks(__ATINIT__)\n\t\t\t}\n\n\t\t\tfunction preMain() {\n\t\t\t\tcallRuntimeCallbacks(__ATMAIN__)\n\t\t\t}\n\n\t\t\tfunction exitRuntime() {\n\t\t\t\truntimeExited = true\n\t\t\t}\n\n\t\t\tfunction postRun() {\n\t\t\t\tif (Module[\"postRun\"]) {\n\t\t\t\t\tif (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n\t\t\t\t\twhile (Module[\"postRun\"].length) {\n\t\t\t\t\t\taddOnPostRun(Module[\"postRun\"].shift())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcallRuntimeCallbacks(__ATPOSTRUN__)\n\t\t\t}\n\n\t\t\tfunction addOnPreRun(cb) {\n\t\t\t\t__ATPRERUN__.unshift(cb)\n\t\t\t}\n\n\t\t\tfunction addOnPostRun(cb) {\n\t\t\t\t__ATPOSTRUN__.unshift(cb)\n\t\t\t}\n\t\t\tvar Math_abs = Math.abs;\n\t\t\tvar Math_ceil = Math.ceil;\n\t\t\tvar Math_floor = Math.floor;\n\t\t\tvar Math_min = Math.min;\n\t\t\tvar runDependencies = 0;\n\t\t\tvar runDependencyWatcher = null;\n\t\t\tvar dependenciesFulfilled = null;\n\n\t\t\tfunction addRunDependency(id) {\n\t\t\t\trunDependencies++;\n\t\t\t\tif (Module[\"monitorRunDependencies\"]) {\n\t\t\t\t\tModule[\"monitorRunDependencies\"](runDependencies)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction removeRunDependency(id) {\n\t\t\t\trunDependencies--;\n\t\t\t\tif (Module[\"monitorRunDependencies\"]) {\n\t\t\t\t\tModule[\"monitorRunDependencies\"](runDependencies)\n\t\t\t\t}\n\t\t\t\tif (runDependencies == 0) {\n\t\t\t\t\tif (runDependencyWatcher !== null) {\n\t\t\t\t\t\tclearInterval(runDependencyWatcher);\n\t\t\t\t\t\trunDependencyWatcher = null\n\t\t\t\t\t}\n\t\t\t\t\tif (dependenciesFulfilled) {\n\t\t\t\t\t\tvar callback = dependenciesFulfilled;\n\t\t\t\t\t\tdependenciesFulfilled = null;\n\t\t\t\t\t\tcallback()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tModule[\"preloadedImages\"] = {};\n\t\t\tModule[\"preloadedAudios\"] = {};\n\n\t\t\tfunction abort(what) {\n\t\t\t\tif (Module[\"onAbort\"]) {\n\t\t\t\t\tModule[\"onAbort\"](what)\n\t\t\t\t}\n\t\t\t\twhat += \"\";\n\t\t\t\tout(what);\n\t\t\t\terr(what);\n\t\t\t\tABORT = true;\n\t\t\t\tEXITSTATUS = 1;\n\t\t\t\twhat = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n\t\t\t\tthrow new WebAssembly.RuntimeError(what)\n\t\t\t}\n\t\t\tvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n\n\t\t\tfunction isDataURI(filename) {\n\t\t\t\treturn String.prototype.startsWith ? filename.startsWith(dataURIPrefix) : filename.indexOf(dataURIPrefix) === 0\n\t\t\t}\n\t\t\tvar wasmBinaryFile =  !ENVIRONMENT_HAS_NODE && raw(\"./openjpeg.wasm.base64\") || \"openjpeg.wasm\";\n\t\t\tif (!isDataURI(wasmBinaryFile)) {\n\t\t\t\twasmBinaryFile = locateFile(wasmBinaryFile)\n\t\t\t}\n\n\t\t\tfunction getBinary() {\n\t\t\t\ttry {\n\t\t\t\t\tif (wasmBinary) {\n\t\t\t\t\t\treturn new Uint8Array(wasmBinary)\n\t\t\t\t\t}\n\t\t\t\t\tif (readBinary) {\n\t\t\t\t\t\treturn readBinary(wasmBinaryFile)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow \"both async and sync fetching of the wasm failed\"\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tabort(err)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getBinaryPromise() {\n\t\t\t\tif (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === \"function\") {\n\t\t\t\t\treturn fetch(wasmBinaryFile, {\n\t\t\t\t\t\tcredentials: \"same-origin\"\n\t\t\t\t\t}).then(function (response) {\n\t\t\t\t\t\tif (!response[\"ok\"]) {\n\t\t\t\t\t\t\tthrow \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn response[\"arrayBuffer\"]()\n\t\t\t\t\t}).catch(function () {\n\t\t\t\t\t\treturn getBinary()\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tresolve(getBinary())\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tfunction createWasm() {\n\t\t\t\tvar info = {\n\t\t\t\t\t\"env\": asmLibraryArg,\n\t\t\t\t\t\"wasi_unstable\": asmLibraryArg,\n\t\t\t\t\t\"global\": {\n\t\t\t\t\t\t\"NaN\": NaN,\n\t\t\t\t\t\tInfinity: Infinity\n\t\t\t\t\t},\n\t\t\t\t\t\"global.Math\": Math,\n\t\t\t\t\t\"asm2wasm\": asm2wasmImports\n\t\t\t\t};\n\n\t\t\t\tfunction receiveInstance(instance, module) {\n\t\t\t\t\tvar exports = instance.exports;\n\t\t\t\t\tModule[\"asm\"] = exports;\n\t\t\t\t\tremoveRunDependency(\"wasm-instantiate\")\n\t\t\t\t}\n\t\t\t\taddRunDependency(\"wasm-instantiate\");\n\n\t\t\t\tfunction receiveInstantiatedSource(output) {\n\t\t\t\t\treceiveInstance(output[\"instance\"])\n\t\t\t\t}\n\n\t\t\t\tfunction instantiateArrayBuffer(receiver) {\n\t\t\t\t\treturn getBinaryPromise().then(function (binary) {\n\t\t\t\t\t\treturn WebAssembly.instantiate(binary, info)\n\t\t\t\t\t}).then(receiver, function (reason) {\n\t\t\t\t\t\terr(\"failed to asynchronously prepare wasm: \" + reason);\n\t\t\t\t\t\tabort(reason)\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tfunction instantiateAsync() {\n\t\t\t\t\tif (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && typeof fetch === \"function\") {\n\t\t\t\t\t\tfetch(wasmBinaryFile, {\n\t\t\t\t\t\t\tcredentials: \"same-origin\"\n\t\t\t\t\t\t}).then(function (response) {\n\t\t\t\t\t\t\tvar result = WebAssembly.instantiateStreaming(response, info);\n\t\t\t\t\t\t\treturn result.then(receiveInstantiatedSource, function (reason) {\n\t\t\t\t\t\t\t\terr(\"wasm streaming compile failed: \" + reason);\n\t\t\t\t\t\t\t\terr(\"falling back to ArrayBuffer instantiation\");\n\t\t\t\t\t\t\t\tinstantiateArrayBuffer(receiveInstantiatedSource)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn instantiateArrayBuffer(receiveInstantiatedSource)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (Module[\"instantiateWasm\"]) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar exports = Module[\"instantiateWasm\"](info, receiveInstance);\n\t\t\t\t\t\treturn exports\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\terr(\"Module.instantiateWasm callback failed with error: \" + e);\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tinstantiateAsync();\n\t\t\t\treturn {}\n\t\t\t}\n\t\t\tModule[\"asm\"] = createWasm;\n\t\t\tvar tempDouble;\n\t\t\tvar tempI64;\n\t\t\t__ATINIT__.push({\n\t\t\t\tfunc: function () {\n\t\t\t\t\tglobalCtors()\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar tempDoublePtr = 38688;\n\n\t\t\tfunction demangle(func) {\n\t\t\t\treturn func\n\t\t\t}\n\n\t\t\tfunction demangleAll(text) {\n\t\t\t\tvar regex = /\\b__Z[\\w\\d_]+/g;\n\t\t\t\treturn text.replace(regex, function (x) {\n\t\t\t\t\tvar y = demangle(x);\n\t\t\t\t\treturn x === y ? x : y + \" [\" + x + \"]\"\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tfunction jsStackTrace() {\n\t\t\t\tvar err = new Error;\n\t\t\t\tif (!err.stack) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthrow new Error(0)\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\terr = e\n\t\t\t\t\t}\n\t\t\t\t\tif (!err.stack) {\n\t\t\t\t\t\treturn \"(no stack trace available)\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn err.stack.toString()\n\t\t\t}\n\n\t\t\tfunction stackTrace() {\n\t\t\t\tvar js = jsStackTrace();\n\t\t\t\tif (Module[\"extraStackTrace\"]) js += \"\\n\" + Module[\"extraStackTrace\"]();\n\t\t\t\treturn demangleAll(js)\n\t\t\t}\n\t\t\tvar ENV = {};\n\n\t\t\tfunction ___buildEnvironment(environ) {\n\t\t\t\tvar MAX_ENV_VALUES = 64;\n\t\t\t\tvar TOTAL_ENV_SIZE = 1024;\n\t\t\t\tvar poolPtr;\n\t\t\t\tvar envPtr;\n\t\t\t\tif (!___buildEnvironment.called) {\n\t\t\t\t\t___buildEnvironment.called = true;\n\t\t\t\t\tENV[\"USER\"] = \"web_user\";\n\t\t\t\t\tENV[\"LOGNAME\"] = \"web_user\";\n\t\t\t\t\tENV[\"PATH\"] = \"/\";\n\t\t\t\t\tENV[\"PWD\"] = \"/\";\n\t\t\t\t\tENV[\"HOME\"] = \"/home/web_user\";\n\t\t\t\t\tENV[\"LANG\"] = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n\t\t\t\t\tENV[\"_\"] = thisProgram;\n\t\t\t\t\tpoolPtr = getMemory(TOTAL_ENV_SIZE);\n\t\t\t\t\tenvPtr = getMemory(MAX_ENV_VALUES * 4);\n\t\t\t\t\tHEAP32[envPtr >> 2] = poolPtr;\n\t\t\t\t\tHEAP32[environ >> 2] = envPtr\n\t\t\t\t} else {\n\t\t\t\t\tenvPtr = HEAP32[environ >> 2];\n\t\t\t\t\tpoolPtr = HEAP32[envPtr >> 2]\n\t\t\t\t}\n\t\t\t\tvar strings = [];\n\t\t\t\tvar totalSize = 0;\n\t\t\t\tfor (var key in ENV) {\n\t\t\t\t\tif (typeof ENV[key] === \"string\") {\n\t\t\t\t\t\tvar line = key + \"=\" + ENV[key];\n\t\t\t\t\t\tstrings.push(line);\n\t\t\t\t\t\ttotalSize += line.length\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (totalSize > TOTAL_ENV_SIZE) {\n\t\t\t\t\tthrow new Error(\"Environment size exceeded TOTAL_ENV_SIZE!\")\n\t\t\t\t}\n\t\t\t\tvar ptrSize = 4;\n\t\t\t\tfor (var i = 0; i < strings.length; i++) {\n\t\t\t\t\tvar line = strings[i];\n\t\t\t\t\twriteAsciiToMemory(line, poolPtr);\n\t\t\t\t\tHEAP32[envPtr + i * ptrSize >> 2] = poolPtr;\n\t\t\t\t\tpoolPtr += line.length + 1\n\t\t\t\t}\n\t\t\t\tHEAP32[envPtr + strings.length * ptrSize >> 2] = 0\n\t\t\t}\n\n\t\t\tfunction ___cxa_allocate_exception(size) {\n\t\t\t\treturn _malloc(size)\n\t\t\t}\n\t\t\tvar ___exception_infos = {};\n\t\t\tvar ___exception_caught = [];\n\n\t\t\tfunction ___exception_addRef(ptr) {\n\t\t\t\tif (!ptr) return;\n\t\t\t\tvar info = ___exception_infos[ptr];\n\t\t\t\tinfo.refcount++\n\t\t\t}\n\n\t\t\tfunction ___exception_deAdjust(adjusted) {\n\t\t\t\tif (!adjusted || ___exception_infos[adjusted]) return adjusted;\n\t\t\t\tfor (var key in ___exception_infos) {\n\t\t\t\t\tvar ptr = +key;\n\t\t\t\t\tvar adj = ___exception_infos[ptr].adjusted;\n\t\t\t\t\tvar len = adj.length;\n\t\t\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\t\t\tif (adj[i] === adjusted) {\n\t\t\t\t\t\t\treturn ptr\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn adjusted\n\t\t\t}\n\n\t\t\tfunction ___cxa_begin_catch(ptr) {\n\t\t\t\tvar info = ___exception_infos[ptr];\n\t\t\t\tif (info && !info.caught) {\n\t\t\t\t\tinfo.caught = true;\n\t\t\t\t\t__ZSt18uncaught_exceptionv.uncaught_exceptions--\n\t\t\t\t}\n\t\t\t\tif (info) info.rethrown = false;\n\t\t\t\t___exception_caught.push(ptr);\n\t\t\t\t___exception_addRef(___exception_deAdjust(ptr));\n\t\t\t\treturn ptr\n\t\t\t}\n\t\t\tvar ___exception_last = 0;\n\n\t\t\tfunction ___cxa_throw(ptr, type, destructor) {\n\t\t\t\t___exception_infos[ptr] = {\n\t\t\t\t\tptr: ptr,\n\t\t\t\t\tadjusted: [ptr],\n\t\t\t\t\ttype: type,\n\t\t\t\t\tdestructor: destructor,\n\t\t\t\t\trefcount: 0,\n\t\t\t\t\tcaught: false,\n\t\t\t\t\trethrown: false\n\t\t\t\t};\n\t\t\t\t___exception_last = ptr;\n\t\t\t\tif (!(\"uncaught_exception\" in __ZSt18uncaught_exceptionv)) {\n\t\t\t\t\t__ZSt18uncaught_exceptionv.uncaught_exceptions = 1\n\t\t\t\t} else {\n\t\t\t\t\t__ZSt18uncaught_exceptionv.uncaught_exceptions++\n\t\t\t\t}\n\t\t\t\tthrow ptr\n\t\t\t}\n\n\t\t\tfunction ___gxx_personality_v0() {}\n\t\t\tvar PATH = {\n\t\t\t\tsplitPath: function (filename) {\n\t\t\t\t\tvar splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n\t\t\t\t\treturn splitPathRe.exec(filename).slice(1)\n\t\t\t\t},\n\t\t\t\tnormalizeArray: function (parts, allowAboveRoot) {\n\t\t\t\t\tvar up = 0;\n\t\t\t\t\tfor (var i = parts.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tvar last = parts[i];\n\t\t\t\t\t\tif (last === \".\") {\n\t\t\t\t\t\t\tparts.splice(i, 1)\n\t\t\t\t\t\t} else if (last === \"..\") {\n\t\t\t\t\t\t\tparts.splice(i, 1);\n\t\t\t\t\t\t\tup++\n\t\t\t\t\t\t} else if (up) {\n\t\t\t\t\t\t\tparts.splice(i, 1);\n\t\t\t\t\t\t\tup--\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\t\tfor (; up; up--) {\n\t\t\t\t\t\t\tparts.unshift(\"..\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn parts\n\t\t\t\t},\n\t\t\t\tnormalize: function (path) {\n\t\t\t\t\tvar isAbsolute = path.charAt(0) === \"/\",\n\t\t\t\t\t\ttrailingSlash = path.substr(-1) === \"/\";\n\t\t\t\t\tpath = PATH.normalizeArray(path.split(\"/\").filter(function (p) {\n\t\t\t\t\t\treturn !!p\n\t\t\t\t\t}), !isAbsolute).join(\"/\");\n\t\t\t\t\tif (!path && !isAbsolute) {\n\t\t\t\t\t\tpath = \".\"\n\t\t\t\t\t}\n\t\t\t\t\tif (path && trailingSlash) {\n\t\t\t\t\t\tpath += \"/\"\n\t\t\t\t\t}\n\t\t\t\t\treturn (isAbsolute ? \"/\" : \"\") + path\n\t\t\t\t},\n\t\t\t\tdirname: function (path) {\n\t\t\t\t\tvar result = PATH.splitPath(path),\n\t\t\t\t\t\troot = result[0],\n\t\t\t\t\t\tdir = result[1];\n\t\t\t\t\tif (!root && !dir) {\n\t\t\t\t\t\treturn \".\"\n\t\t\t\t\t}\n\t\t\t\t\tif (dir) {\n\t\t\t\t\t\tdir = dir.substr(0, dir.length - 1)\n\t\t\t\t\t}\n\t\t\t\t\treturn root + dir\n\t\t\t\t},\n\t\t\t\tbasename: function (path) {\n\t\t\t\t\tif (path === \"/\") return \"/\";\n\t\t\t\t\tvar lastSlash = path.lastIndexOf(\"/\");\n\t\t\t\t\tif (lastSlash === -1) return path;\n\t\t\t\t\treturn path.substr(lastSlash + 1)\n\t\t\t\t},\n\t\t\t\textname: function (path) {\n\t\t\t\t\treturn PATH.splitPath(path)[3]\n\t\t\t\t},\n\t\t\t\tjoin: function () {\n\t\t\t\t\tvar paths = Array.prototype.slice.call(arguments, 0);\n\t\t\t\t\treturn PATH.normalize(paths.join(\"/\"))\n\t\t\t\t},\n\t\t\t\tjoin2: function (l, r) {\n\t\t\t\t\treturn PATH.normalize(l + \"/\" + r)\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar SYSCALLS = {\n\t\t\t\tbuffers: [null, [],\n\t\t\t\t\t[]\n\t\t\t\t],\n\t\t\t\tprintChar: function (stream, curr) {\n\t\t\t\t\tvar buffer = SYSCALLS.buffers[stream];\n\t\t\t\t\tif (curr === 0 || curr === 10) {\n\t\t\t\t\t\t(stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n\t\t\t\t\t\tbuffer.length = 0\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbuffer.push(curr)\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tvarargs: 0,\n\t\t\t\tget: function (varargs) {\n\t\t\t\t\tSYSCALLS.varargs += 4;\n\t\t\t\t\tvar ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n\t\t\t\t\treturn ret\n\t\t\t\t},\n\t\t\t\tgetStr: function () {\n\t\t\t\t\tvar ret = UTF8ToString(SYSCALLS.get());\n\t\t\t\t\treturn ret\n\t\t\t\t},\n\t\t\t\tget64: function () {\n\t\t\t\t\tvar low = SYSCALLS.get(),\n\t\t\t\t\t\thigh = SYSCALLS.get();\n\t\t\t\t\treturn low\n\t\t\t\t},\n\t\t\t\tgetZero: function () {\n\t\t\t\t\tSYSCALLS.get()\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfunction _fd_close(fd) {\n\t\t\t\ttry {\n\t\t\t\t\treturn 0\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n\t\t\t\t\treturn e.errno\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction ___wasi_fd_close() {\n\t\t\t\treturn _fd_close.apply(null, arguments)\n\t\t\t}\n\n\t\t\tfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n\t\t\t\ttry {\n\t\t\t\t\treturn 0\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n\t\t\t\t\treturn e.errno\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction ___wasi_fd_seek() {\n\t\t\t\treturn _fd_seek.apply(null, arguments)\n\t\t\t}\n\n\t\t\tfunction flush_NO_FILESYSTEM() {\n\t\t\t\tvar fflush = Module[\"_fflush\"];\n\t\t\t\tif (fflush) fflush(0);\n\t\t\t\tvar buffers = SYSCALLS.buffers;\n\t\t\t\tif (buffers[1].length) SYSCALLS.printChar(1, 10);\n\t\t\t\tif (buffers[2].length) SYSCALLS.printChar(2, 10)\n\t\t\t}\n\n\t\t\tfunction _fd_write(fd, iov, iovcnt, pnum) {\n\t\t\t\ttry {\n\t\t\t\t\tvar num = 0;\n\t\t\t\t\tfor (var i = 0; i < iovcnt; i++) {\n\t\t\t\t\t\tvar ptr = HEAP32[iov + i * 8 >> 2];\n\t\t\t\t\t\tvar len = HEAP32[iov + (i * 8 + 4) >> 2];\n\t\t\t\t\t\tfor (var j = 0; j < len; j++) {\n\t\t\t\t\t\t\tSYSCALLS.printChar(fd, HEAPU8[ptr + j])\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnum += len\n\t\t\t\t\t}\n\t\t\t\t\tHEAP32[pnum >> 2] = num;\n\t\t\t\t\treturn 0\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n\t\t\t\t\treturn e.errno\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction ___wasi_fd_write() {\n\t\t\t\treturn _fd_write.apply(null, arguments)\n\t\t\t}\n\t\t\tvar structRegistrations = {};\n\n\t\t\tfunction runDestructors(destructors) {\n\t\t\t\twhile (destructors.length) {\n\t\t\t\t\tvar ptr = destructors.pop();\n\t\t\t\t\tvar del = destructors.pop();\n\t\t\t\t\tdel(ptr)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction simpleReadValueFromPointer(pointer) {\n\t\t\t\treturn this[\"fromWireType\"](HEAPU32[pointer >> 2])\n\t\t\t}\n\t\t\tvar awaitingDependencies = {};\n\t\t\tvar registeredTypes = {};\n\t\t\tvar typeDependencies = {};\n\t\t\tvar char_0 = 48;\n\t\t\tvar char_9 = 57;\n\n\t\t\tfunction makeLegalFunctionName(name) {\n\t\t\t\tif (undefined === name) {\n\t\t\t\t\treturn \"_unknown\"\n\t\t\t\t}\n\t\t\t\tname = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n\t\t\t\tvar f = name.charCodeAt(0);\n\t\t\t\tif (f >= char_0 && f <= char_9) {\n\t\t\t\t\treturn \"_\" + name\n\t\t\t\t} else {\n\t\t\t\t\treturn name\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction createNamedFunction(name, body) {\n\t\t\t\tname = makeLegalFunctionName(name);\n\t\t\t\treturn new Function(\"body\", \"return function \" + name + \"() {\\n\" + '    \"use strict\";' + \"    return body.apply(this, arguments);\\n\" + \"};\\n\")(body)\n\t\t\t}\n\n\t\t\tfunction extendError(baseErrorType, errorName) {\n\t\t\t\tvar errorClass = createNamedFunction(errorName, function (message) {\n\t\t\t\t\tthis.name = errorName;\n\t\t\t\t\tthis.message = message;\n\t\t\t\t\tvar stack = new Error(message).stack;\n\t\t\t\t\tif (stack !== undefined) {\n\t\t\t\t\t\tthis.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\")\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\terrorClass.prototype = Object.create(baseErrorType.prototype);\n\t\t\t\terrorClass.prototype.constructor = errorClass;\n\t\t\t\terrorClass.prototype.toString = function () {\n\t\t\t\t\tif (this.message === undefined) {\n\t\t\t\t\t\treturn this.name\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.name + \": \" + this.message\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn errorClass\n\t\t\t}\n\t\t\tvar InternalError = undefined;\n\n\t\t\tfunction throwInternalError(message) {\n\t\t\t\tthrow new InternalError(message)\n\t\t\t}\n\n\t\t\tfunction whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n\t\t\t\tmyTypes.forEach(function (type) {\n\t\t\t\t\ttypeDependencies[type] = dependentTypes\n\t\t\t\t});\n\n\t\t\t\tfunction onComplete(typeConverters) {\n\t\t\t\t\tvar myTypeConverters = getTypeConverters(typeConverters);\n\t\t\t\t\tif (myTypeConverters.length !== myTypes.length) {\n\t\t\t\t\t\tthrowInternalError(\"Mismatched type converter count\")\n\t\t\t\t\t}\n\t\t\t\t\tfor (var i = 0; i < myTypes.length; ++i) {\n\t\t\t\t\t\tregisterType(myTypes[i], myTypeConverters[i])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar typeConverters = new Array(dependentTypes.length);\n\t\t\t\tvar unregisteredTypes = [];\n\t\t\t\tvar registered = 0;\n\t\t\t\tdependentTypes.forEach(function (dt, i) {\n\t\t\t\t\tif (registeredTypes.hasOwnProperty(dt)) {\n\t\t\t\t\t\ttypeConverters[i] = registeredTypes[dt]\n\t\t\t\t\t} else {\n\t\t\t\t\t\tunregisteredTypes.push(dt);\n\t\t\t\t\t\tif (!awaitingDependencies.hasOwnProperty(dt)) {\n\t\t\t\t\t\t\tawaitingDependencies[dt] = []\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawaitingDependencies[dt].push(function () {\n\t\t\t\t\t\t\ttypeConverters[i] = registeredTypes[dt];\n\t\t\t\t\t\t\t++registered;\n\t\t\t\t\t\t\tif (registered === unregisteredTypes.length) {\n\t\t\t\t\t\t\t\tonComplete(typeConverters)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (0 === unregisteredTypes.length) {\n\t\t\t\t\tonComplete(typeConverters)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction __embind_finalize_value_object(structType) {\n\t\t\t\tvar reg = structRegistrations[structType];\n\t\t\t\tdelete structRegistrations[structType];\n\t\t\t\tvar rawConstructor = reg.rawConstructor;\n\t\t\t\tvar rawDestructor = reg.rawDestructor;\n\t\t\t\tvar fieldRecords = reg.fields;\n\t\t\t\tvar fieldTypes = fieldRecords.map(function (field) {\n\t\t\t\t\treturn field.getterReturnType\n\t\t\t\t}).concat(fieldRecords.map(function (field) {\n\t\t\t\t\treturn field.setterArgumentType\n\t\t\t\t}));\n\t\t\t\twhenDependentTypesAreResolved([structType], fieldTypes, function (fieldTypes) {\n\t\t\t\t\tvar fields = {};\n\t\t\t\t\tfieldRecords.forEach(function (field, i) {\n\t\t\t\t\t\tvar fieldName = field.fieldName;\n\t\t\t\t\t\tvar getterReturnType = fieldTypes[i];\n\t\t\t\t\t\tvar getter = field.getter;\n\t\t\t\t\t\tvar getterContext = field.getterContext;\n\t\t\t\t\t\tvar setterArgumentType = fieldTypes[i + fieldRecords.length];\n\t\t\t\t\t\tvar setter = field.setter;\n\t\t\t\t\t\tvar setterContext = field.setterContext;\n\t\t\t\t\t\tfields[fieldName] = {\n\t\t\t\t\t\t\tread: function (ptr) {\n\t\t\t\t\t\t\t\treturn getterReturnType[\"fromWireType\"](getter(getterContext, ptr))\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\twrite: function (ptr, o) {\n\t\t\t\t\t\t\t\tvar destructors = [];\n\t\t\t\t\t\t\t\tsetter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n\t\t\t\t\t\t\t\trunDestructors(destructors)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn [{\n\t\t\t\t\t\tname: reg.name,\n\t\t\t\t\t\t\"fromWireType\": function (ptr) {\n\t\t\t\t\t\t\tvar rv = {};\n\t\t\t\t\t\t\tfor (var i in fields) {\n\t\t\t\t\t\t\t\trv[i] = fields[i].read(ptr)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trawDestructor(ptr);\n\t\t\t\t\t\t\treturn rv\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"toWireType\": function (destructors, o) {\n\t\t\t\t\t\t\tfor (var fieldName in fields) {\n\t\t\t\t\t\t\t\tif (!(fieldName in o)) {\n\t\t\t\t\t\t\t\t\tthrow new TypeError(\"Missing field\")\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar ptr = rawConstructor();\n\t\t\t\t\t\t\tfor (fieldName in fields) {\n\t\t\t\t\t\t\t\tfields[fieldName].write(ptr, o[fieldName])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (destructors !== null) {\n\t\t\t\t\t\t\t\tdestructors.push(rawDestructor, ptr)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn ptr\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"argPackAdvance\": 8,\n\t\t\t\t\t\t\"readValueFromPointer\": simpleReadValueFromPointer,\n\t\t\t\t\t\tdestructorFunction: rawDestructor\n\t\t\t\t\t}]\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tfunction getShiftFromSize(size) {\n\t\t\t\tswitch (size) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\treturn 2;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\treturn 3;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new TypeError(\"Unknown type size: \" + size)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction embind_init_charCodes() {\n\t\t\t\tvar codes = new Array(256);\n\t\t\t\tfor (var i = 0; i < 256; ++i) {\n\t\t\t\t\tcodes[i] = String.fromCharCode(i)\n\t\t\t\t}\n\t\t\t\tembind_charCodes = codes\n\t\t\t}\n\t\t\tvar embind_charCodes = undefined;\n\n\t\t\tfunction readLatin1String(ptr) {\n\t\t\t\tvar ret = \"\";\n\t\t\t\tvar c = ptr;\n\t\t\t\twhile (HEAPU8[c]) {\n\t\t\t\t\tret += embind_charCodes[HEAPU8[c++]]\n\t\t\t\t}\n\t\t\t\treturn ret\n\t\t\t}\n\t\t\tvar BindingError = undefined;\n\n\t\t\tfunction throwBindingError(message) {\n\t\t\t\tthrow new BindingError(message)\n\t\t\t}\n\n\t\t\tfunction registerType(rawType, registeredInstance, options) {\n\t\t\t\toptions = options || {};\n\t\t\t\tif (!(\"argPackAdvance\" in registeredInstance)) {\n\t\t\t\t\tthrow new TypeError(\"registerType registeredInstance requires argPackAdvance\")\n\t\t\t\t}\n\t\t\t\tvar name = registeredInstance.name;\n\t\t\t\tif (!rawType) {\n\t\t\t\t\tthrowBindingError('type \"' + name + '\" must have a positive integer typeid pointer')\n\t\t\t\t}\n\t\t\t\tif (registeredTypes.hasOwnProperty(rawType)) {\n\t\t\t\t\tif (options.ignoreDuplicateRegistrations) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrowBindingError(\"Cannot register type '\" + name + \"' twice\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tregisteredTypes[rawType] = registeredInstance;\n\t\t\t\tdelete typeDependencies[rawType];\n\t\t\t\tif (awaitingDependencies.hasOwnProperty(rawType)) {\n\t\t\t\t\tvar callbacks = awaitingDependencies[rawType];\n\t\t\t\t\tdelete awaitingDependencies[rawType];\n\t\t\t\t\tcallbacks.forEach(function (cb) {\n\t\t\t\t\t\tcb()\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n\t\t\t\tvar shift = getShiftFromSize(size);\n\t\t\t\tname = readLatin1String(name);\n\t\t\t\tregisterType(rawType, {\n\t\t\t\t\tname: name,\n\t\t\t\t\t\"fromWireType\": function (wt) {\n\t\t\t\t\t\treturn !!wt\n\t\t\t\t\t},\n\t\t\t\t\t\"toWireType\": function (destructors, o) {\n\t\t\t\t\t\treturn o ? trueValue : falseValue\n\t\t\t\t\t},\n\t\t\t\t\t\"argPackAdvance\": 8,\n\t\t\t\t\t\"readValueFromPointer\": function (pointer) {\n\t\t\t\t\t\tvar heap;\n\t\t\t\t\t\tif (size === 1) {\n\t\t\t\t\t\t\theap = HEAP8\n\t\t\t\t\t\t} else if (size === 2) {\n\t\t\t\t\t\t\theap = HEAP16\n\t\t\t\t\t\t} else if (size === 4) {\n\t\t\t\t\t\t\theap = HEAP32\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new TypeError(\"Unknown boolean type size: \" + name)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this[\"fromWireType\"](heap[pointer >> shift])\n\t\t\t\t\t},\n\t\t\t\t\tdestructorFunction: null\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tfunction ClassHandle_isAliasOf(other) {\n\t\t\t\tif (!(this instanceof ClassHandle)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tif (!(other instanceof ClassHandle)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tvar leftClass = this.$$.ptrType.registeredClass;\n\t\t\t\tvar left = this.$$.ptr;\n\t\t\t\tvar rightClass = other.$$.ptrType.registeredClass;\n\t\t\t\tvar right = other.$$.ptr;\n\t\t\t\twhile (leftClass.baseClass) {\n\t\t\t\t\tleft = leftClass.upcast(left);\n\t\t\t\t\tleftClass = leftClass.baseClass\n\t\t\t\t}\n\t\t\t\twhile (rightClass.baseClass) {\n\t\t\t\t\tright = rightClass.upcast(right);\n\t\t\t\t\trightClass = rightClass.baseClass\n\t\t\t\t}\n\t\t\t\treturn leftClass === rightClass && left === right\n\t\t\t}\n\n\t\t\tfunction shallowCopyInternalPointer(o) {\n\t\t\t\treturn {\n\t\t\t\t\tcount: o.count,\n\t\t\t\t\tdeleteScheduled: o.deleteScheduled,\n\t\t\t\t\tpreservePointerOnDelete: o.preservePointerOnDelete,\n\t\t\t\t\tptr: o.ptr,\n\t\t\t\t\tptrType: o.ptrType,\n\t\t\t\t\tsmartPtr: o.smartPtr,\n\t\t\t\t\tsmartPtrType: o.smartPtrType\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction throwInstanceAlreadyDeleted(obj) {\n\t\t\t\tfunction getInstanceTypeName(handle) {\n\t\t\t\t\treturn handle.$$.ptrType.registeredClass.name\n\t\t\t\t}\n\t\t\t\tthrowBindingError(getInstanceTypeName(obj) + \" instance already deleted\")\n\t\t\t}\n\t\t\tvar finalizationGroup = false;\n\n\t\t\tfunction detachFinalizer(handle) {}\n\n\t\t\tfunction runDestructor($$) {\n\t\t\t\tif ($$.smartPtr) {\n\t\t\t\t\t$$.smartPtrType.rawDestructor($$.smartPtr)\n\t\t\t\t} else {\n\t\t\t\t\t$$.ptrType.registeredClass.rawDestructor($$.ptr)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction releaseClassHandle($$) {\n\t\t\t\t$$.count.value -= 1;\n\t\t\t\tvar toDelete = 0 === $$.count.value;\n\t\t\t\tif (toDelete) {\n\t\t\t\t\trunDestructor($$)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction attachFinalizer(handle) {\n\t\t\t\tif (\"undefined\" === typeof FinalizationGroup) {\n\t\t\t\t\tattachFinalizer = function (handle) {\n\t\t\t\t\t\treturn handle\n\t\t\t\t\t};\n\t\t\t\t\treturn handle\n\t\t\t\t}\n\t\t\t\tfinalizationGroup = new FinalizationGroup(function (iter) {\n\t\t\t\t\tfor (var result = iter.next(); !result.done; result = iter.next()) {\n\t\t\t\t\t\tvar $$ = result.value;\n\t\t\t\t\t\tif (!$$.ptr) {\n\t\t\t\t\t\t\tconsole.warn(\"object already deleted: \" + $$.ptr)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treleaseClassHandle($$)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tattachFinalizer = function (handle) {\n\t\t\t\t\tfinalizationGroup.register(handle, handle.$$, handle.$$);\n\t\t\t\t\treturn handle\n\t\t\t\t};\n\t\t\t\tdetachFinalizer = function (handle) {\n\t\t\t\t\tfinalizationGroup.unregister(handle.$$)\n\t\t\t\t};\n\t\t\t\treturn attachFinalizer(handle)\n\t\t\t}\n\n\t\t\tfunction ClassHandle_clone() {\n\t\t\t\tif (!this.$$.ptr) {\n\t\t\t\t\tthrowInstanceAlreadyDeleted(this)\n\t\t\t\t}\n\t\t\t\tif (this.$$.preservePointerOnDelete) {\n\t\t\t\t\tthis.$$.count.value += 1;\n\t\t\t\t\treturn this\n\t\t\t\t} else {\n\t\t\t\t\tvar clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n\t\t\t\t\t\t$$: {\n\t\t\t\t\t\t\tvalue: shallowCopyInternalPointer(this.$$)\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\tclone.$$.count.value += 1;\n\t\t\t\t\tclone.$$.deleteScheduled = false;\n\t\t\t\t\treturn clone\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction ClassHandle_delete() {\n\t\t\t\tif (!this.$$.ptr) {\n\t\t\t\t\tthrowInstanceAlreadyDeleted(this)\n\t\t\t\t}\n\t\t\t\tif (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n\t\t\t\t\tthrowBindingError(\"Object already scheduled for deletion\")\n\t\t\t\t}\n\t\t\t\tdetachFinalizer(this);\n\t\t\t\treleaseClassHandle(this.$$);\n\t\t\t\tif (!this.$$.preservePointerOnDelete) {\n\t\t\t\t\tthis.$$.smartPtr = undefined;\n\t\t\t\t\tthis.$$.ptr = undefined\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction ClassHandle_isDeleted() {\n\t\t\t\treturn !this.$$.ptr\n\t\t\t}\n\t\t\tvar delayFunction = undefined;\n\t\t\tvar deletionQueue = [];\n\n\t\t\tfunction flushPendingDeletes() {\n\t\t\t\twhile (deletionQueue.length) {\n\t\t\t\t\tvar obj = deletionQueue.pop();\n\t\t\t\t\tobj.$$.deleteScheduled = false;\n\t\t\t\t\tobj[\"delete\"]()\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction ClassHandle_deleteLater() {\n\t\t\t\tif (!this.$$.ptr) {\n\t\t\t\t\tthrowInstanceAlreadyDeleted(this)\n\t\t\t\t}\n\t\t\t\tif (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n\t\t\t\t\tthrowBindingError(\"Object already scheduled for deletion\")\n\t\t\t\t}\n\t\t\t\tdeletionQueue.push(this);\n\t\t\t\tif (deletionQueue.length === 1 && delayFunction) {\n\t\t\t\t\tdelayFunction(flushPendingDeletes)\n\t\t\t\t}\n\t\t\t\tthis.$$.deleteScheduled = true;\n\t\t\t\treturn this\n\t\t\t}\n\n\t\t\tfunction init_ClassHandle() {\n\t\t\t\tClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n\t\t\t\tClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n\t\t\t\tClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n\t\t\t\tClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n\t\t\t\tClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater\n\t\t\t}\n\n\t\t\tfunction ClassHandle() {}\n\t\t\tvar registeredPointers = {};\n\n\t\t\tfunction ensureOverloadTable(proto, methodName, humanName) {\n\t\t\t\tif (undefined === proto[methodName].overloadTable) {\n\t\t\t\t\tvar prevFunc = proto[methodName];\n\t\t\t\t\tproto[methodName] = function () {\n\t\t\t\t\t\tif (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n\t\t\t\t\t\t\tthrowBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn proto[methodName].overloadTable[arguments.length].apply(this, arguments)\n\t\t\t\t\t};\n\t\t\t\t\tproto[methodName].overloadTable = [];\n\t\t\t\t\tproto[methodName].overloadTable[prevFunc.argCount] = prevFunc\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction exposePublicSymbol(name, value, numArguments) {\n\t\t\t\tif (Module.hasOwnProperty(name)) {\n\t\t\t\t\tif (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {\n\t\t\t\t\t\tthrowBindingError(\"Cannot register public name '\" + name + \"' twice\")\n\t\t\t\t\t}\n\t\t\t\t\tensureOverloadTable(Module, name, name);\n\t\t\t\t\tif (Module.hasOwnProperty(numArguments)) {\n\t\t\t\t\t\tthrowBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\")\n\t\t\t\t\t}\n\t\t\t\t\tModule[name].overloadTable[numArguments] = value\n\t\t\t\t} else {\n\t\t\t\t\tModule[name] = value;\n\t\t\t\t\tif (undefined !== numArguments) {\n\t\t\t\t\t\tModule[name].numArguments = numArguments\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n\t\t\t\tthis.name = name;\n\t\t\t\tthis.constructor = constructor;\n\t\t\t\tthis.instancePrototype = instancePrototype;\n\t\t\t\tthis.rawDestructor = rawDestructor;\n\t\t\t\tthis.baseClass = baseClass;\n\t\t\t\tthis.getActualType = getActualType;\n\t\t\t\tthis.upcast = upcast;\n\t\t\t\tthis.downcast = downcast;\n\t\t\t\tthis.pureVirtualFunctions = []\n\t\t\t}\n\n\t\t\tfunction upcastPointer(ptr, ptrClass, desiredClass) {\n\t\t\t\twhile (ptrClass !== desiredClass) {\n\t\t\t\t\tif (!ptrClass.upcast) {\n\t\t\t\t\t\tthrowBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name)\n\t\t\t\t\t}\n\t\t\t\t\tptr = ptrClass.upcast(ptr);\n\t\t\t\t\tptrClass = ptrClass.baseClass\n\t\t\t\t}\n\t\t\t\treturn ptr\n\t\t\t}\n\n\t\t\tfunction constNoSmartPtrRawPointerToWireType(destructors, handle) {\n\t\t\t\tif (handle === null) {\n\t\t\t\t\tif (this.isReference) {\n\t\t\t\t\t\tthrowBindingError(\"null is not a valid \" + this.name)\n\t\t\t\t\t}\n\t\t\t\t\treturn 0\n\t\t\t\t}\n\t\t\t\tif (!handle.$$) {\n\t\t\t\t\tthrowBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name)\n\t\t\t\t}\n\t\t\t\tif (!handle.$$.ptr) {\n\t\t\t\t\tthrowBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name)\n\t\t\t\t}\n\t\t\t\tvar handleClass = handle.$$.ptrType.registeredClass;\n\t\t\t\tvar ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n\t\t\t\treturn ptr\n\t\t\t}\n\n\t\t\tfunction genericPointerToWireType(destructors, handle) {\n\t\t\t\tvar ptr;\n\t\t\t\tif (handle === null) {\n\t\t\t\t\tif (this.isReference) {\n\t\t\t\t\t\tthrowBindingError(\"null is not a valid \" + this.name)\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isSmartPointer) {\n\t\t\t\t\t\tptr = this.rawConstructor();\n\t\t\t\t\t\tif (destructors !== null) {\n\t\t\t\t\t\t\tdestructors.push(this.rawDestructor, ptr)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ptr\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 0\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!handle.$$) {\n\t\t\t\t\tthrowBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name)\n\t\t\t\t}\n\t\t\t\tif (!handle.$$.ptr) {\n\t\t\t\t\tthrowBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name)\n\t\t\t\t}\n\t\t\t\tif (!this.isConst && handle.$$.ptrType.isConst) {\n\t\t\t\t\tthrowBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name)\n\t\t\t\t}\n\t\t\t\tvar handleClass = handle.$$.ptrType.registeredClass;\n\t\t\t\tptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n\t\t\t\tif (this.isSmartPointer) {\n\t\t\t\t\tif (undefined === handle.$$.smartPtr) {\n\t\t\t\t\t\tthrowBindingError(\"Passing raw pointer to smart pointer is illegal\")\n\t\t\t\t\t}\n\t\t\t\t\tswitch (this.sharingPolicy) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tif (handle.$$.smartPtrType === this) {\n\t\t\t\t\t\t\t\tptr = handle.$$.smartPtr\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrowBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tptr = handle.$$.smartPtr;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tif (handle.$$.smartPtrType === this) {\n\t\t\t\t\t\t\t\tptr = handle.$$.smartPtr\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar clonedHandle = handle[\"clone\"]();\n\t\t\t\t\t\t\t\tptr = this.rawShare(ptr, __emval_register(function () {\n\t\t\t\t\t\t\t\t\tclonedHandle[\"delete\"]()\n\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t\tif (destructors !== null) {\n\t\t\t\t\t\t\t\t\tdestructors.push(this.rawDestructor, ptr)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrowBindingError(\"Unsupporting sharing policy\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn ptr\n\t\t\t}\n\n\t\t\tfunction nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n\t\t\t\tif (handle === null) {\n\t\t\t\t\tif (this.isReference) {\n\t\t\t\t\t\tthrowBindingError(\"null is not a valid \" + this.name)\n\t\t\t\t\t}\n\t\t\t\t\treturn 0\n\t\t\t\t}\n\t\t\t\tif (!handle.$$) {\n\t\t\t\t\tthrowBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name)\n\t\t\t\t}\n\t\t\t\tif (!handle.$$.ptr) {\n\t\t\t\t\tthrowBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name)\n\t\t\t\t}\n\t\t\t\tif (handle.$$.ptrType.isConst) {\n\t\t\t\t\tthrowBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name)\n\t\t\t\t}\n\t\t\t\tvar handleClass = handle.$$.ptrType.registeredClass;\n\t\t\t\tvar ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n\t\t\t\treturn ptr\n\t\t\t}\n\n\t\t\tfunction RegisteredPointer_getPointee(ptr) {\n\t\t\t\tif (this.rawGetPointee) {\n\t\t\t\t\tptr = this.rawGetPointee(ptr)\n\t\t\t\t}\n\t\t\t\treturn ptr\n\t\t\t}\n\n\t\t\tfunction RegisteredPointer_destructor(ptr) {\n\t\t\t\tif (this.rawDestructor) {\n\t\t\t\t\tthis.rawDestructor(ptr)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction RegisteredPointer_deleteObject(handle) {\n\t\t\t\tif (handle !== null) {\n\t\t\t\t\thandle[\"delete\"]()\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction downcastPointer(ptr, ptrClass, desiredClass) {\n\t\t\t\tif (ptrClass === desiredClass) {\n\t\t\t\t\treturn ptr\n\t\t\t\t}\n\t\t\t\tif (undefined === desiredClass.baseClass) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\tvar rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n\t\t\t\tif (rv === null) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\treturn desiredClass.downcast(rv)\n\t\t\t}\n\n\t\t\tfunction getInheritedInstanceCount() {\n\t\t\t\treturn Object.keys(registeredInstances).length\n\t\t\t}\n\n\t\t\tfunction getLiveInheritedInstances() {\n\t\t\t\tvar rv = [];\n\t\t\t\tfor (var k in registeredInstances) {\n\t\t\t\t\tif (registeredInstances.hasOwnProperty(k)) {\n\t\t\t\t\t\trv.push(registeredInstances[k])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn rv\n\t\t\t}\n\n\t\t\tfunction setDelayFunction(fn) {\n\t\t\t\tdelayFunction = fn;\n\t\t\t\tif (deletionQueue.length && delayFunction) {\n\t\t\t\t\tdelayFunction(flushPendingDeletes)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction init_embind() {\n\t\t\t\tModule[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n\t\t\t\tModule[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n\t\t\t\tModule[\"flushPendingDeletes\"] = flushPendingDeletes;\n\t\t\t\tModule[\"setDelayFunction\"] = setDelayFunction\n\t\t\t}\n\t\t\tvar registeredInstances = {};\n\n\t\t\tfunction getBasestPointer(class_, ptr) {\n\t\t\t\tif (ptr === undefined) {\n\t\t\t\t\tthrowBindingError(\"ptr should not be undefined\")\n\t\t\t\t}\n\t\t\t\twhile (class_.baseClass) {\n\t\t\t\t\tptr = class_.upcast(ptr);\n\t\t\t\t\tclass_ = class_.baseClass\n\t\t\t\t}\n\t\t\t\treturn ptr\n\t\t\t}\n\n\t\t\tfunction getInheritedInstance(class_, ptr) {\n\t\t\t\tptr = getBasestPointer(class_, ptr);\n\t\t\t\treturn registeredInstances[ptr]\n\t\t\t}\n\n\t\t\tfunction makeClassHandle(prototype, record) {\n\t\t\t\tif (!record.ptrType || !record.ptr) {\n\t\t\t\t\tthrowInternalError(\"makeClassHandle requires ptr and ptrType\")\n\t\t\t\t}\n\t\t\t\tvar hasSmartPtrType = !!record.smartPtrType;\n\t\t\t\tvar hasSmartPtr = !!record.smartPtr;\n\t\t\t\tif (hasSmartPtrType !== hasSmartPtr) {\n\t\t\t\t\tthrowInternalError(\"Both smartPtrType and smartPtr must be specified\")\n\t\t\t\t}\n\t\t\t\trecord.count = {\n\t\t\t\t\tvalue: 1\n\t\t\t\t};\n\t\t\t\treturn attachFinalizer(Object.create(prototype, {\n\t\t\t\t\t$$: {\n\t\t\t\t\t\tvalue: record\n\t\t\t\t\t}\n\t\t\t\t}))\n\t\t\t}\n\n\t\t\tfunction RegisteredPointer_fromWireType(ptr) {\n\t\t\t\tvar rawPointer = this.getPointee(ptr);\n\t\t\t\tif (!rawPointer) {\n\t\t\t\t\tthis.destructor(ptr);\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\tvar registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n\t\t\t\tif (undefined !== registeredInstance) {\n\t\t\t\t\tif (0 === registeredInstance.$$.count.value) {\n\t\t\t\t\t\tregisteredInstance.$$.ptr = rawPointer;\n\t\t\t\t\t\tregisteredInstance.$$.smartPtr = ptr;\n\t\t\t\t\t\treturn registeredInstance[\"clone\"]()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rv = registeredInstance[\"clone\"]();\n\t\t\t\t\t\tthis.destructor(ptr);\n\t\t\t\t\t\treturn rv\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction makeDefaultHandle() {\n\t\t\t\t\tif (this.isSmartPointer) {\n\t\t\t\t\t\treturn makeClassHandle(this.registeredClass.instancePrototype, {\n\t\t\t\t\t\t\tptrType: this.pointeeType,\n\t\t\t\t\t\t\tptr: rawPointer,\n\t\t\t\t\t\t\tsmartPtrType: this,\n\t\t\t\t\t\t\tsmartPtr: ptr\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn makeClassHandle(this.registeredClass.instancePrototype, {\n\t\t\t\t\t\t\tptrType: this,\n\t\t\t\t\t\t\tptr: ptr\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar actualType = this.registeredClass.getActualType(rawPointer);\n\t\t\t\tvar registeredPointerRecord = registeredPointers[actualType];\n\t\t\t\tif (!registeredPointerRecord) {\n\t\t\t\t\treturn makeDefaultHandle.call(this)\n\t\t\t\t}\n\t\t\t\tvar toType;\n\t\t\t\tif (this.isConst) {\n\t\t\t\t\ttoType = registeredPointerRecord.constPointerType\n\t\t\t\t} else {\n\t\t\t\t\ttoType = registeredPointerRecord.pointerType\n\t\t\t\t}\n\t\t\t\tvar dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n\t\t\t\tif (dp === null) {\n\t\t\t\t\treturn makeDefaultHandle.call(this)\n\t\t\t\t}\n\t\t\t\tif (this.isSmartPointer) {\n\t\t\t\t\treturn makeClassHandle(toType.registeredClass.instancePrototype, {\n\t\t\t\t\t\tptrType: toType,\n\t\t\t\t\t\tptr: dp,\n\t\t\t\t\t\tsmartPtrType: this,\n\t\t\t\t\t\tsmartPtr: ptr\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\treturn makeClassHandle(toType.registeredClass.instancePrototype, {\n\t\t\t\t\t\tptrType: toType,\n\t\t\t\t\t\tptr: dp\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction init_RegisteredPointer() {\n\t\t\t\tRegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n\t\t\t\tRegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n\t\t\t\tRegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n\t\t\t\tRegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n\t\t\t\tRegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n\t\t\t\tRegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType\n\t\t\t}\n\n\t\t\tfunction RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n\t\t\t\tthis.name = name;\n\t\t\t\tthis.registeredClass = registeredClass;\n\t\t\t\tthis.isReference = isReference;\n\t\t\t\tthis.isConst = isConst;\n\t\t\t\tthis.isSmartPointer = isSmartPointer;\n\t\t\t\tthis.pointeeType = pointeeType;\n\t\t\t\tthis.sharingPolicy = sharingPolicy;\n\t\t\t\tthis.rawGetPointee = rawGetPointee;\n\t\t\t\tthis.rawConstructor = rawConstructor;\n\t\t\t\tthis.rawShare = rawShare;\n\t\t\t\tthis.rawDestructor = rawDestructor;\n\t\t\t\tif (!isSmartPointer && registeredClass.baseClass === undefined) {\n\t\t\t\t\tif (isConst) {\n\t\t\t\t\t\tthis[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n\t\t\t\t\t\tthis.destructorFunction = null\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n\t\t\t\t\t\tthis.destructorFunction = null\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis[\"toWireType\"] = genericPointerToWireType\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction replacePublicSymbol(name, value, numArguments) {\n\t\t\t\tif (!Module.hasOwnProperty(name)) {\n\t\t\t\t\tthrowInternalError(\"Replacing nonexistant public symbol\")\n\t\t\t\t}\n\t\t\t\tif (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n\t\t\t\t\tModule[name].overloadTable[numArguments] = value\n\t\t\t\t} else {\n\t\t\t\t\tModule[name] = value;\n\t\t\t\t\tModule[name].argCount = numArguments\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction embind__requireFunction(signature, rawFunction) {\n\t\t\t\tsignature = readLatin1String(signature);\n\n\t\t\t\tfunction makeDynCaller(dynCall) {\n\t\t\t\t\tvar args = [];\n\t\t\t\t\tfor (var i = 1; i < signature.length; ++i) {\n\t\t\t\t\t\targs.push(\"a\" + i)\n\t\t\t\t\t}\n\t\t\t\t\tvar name = \"dynCall_\" + signature + \"_\" + rawFunction;\n\t\t\t\t\tvar body = \"return function \" + name + \"(\" + args.join(\", \") + \") {\\n\";\n\t\t\t\t\tbody += \"    return dynCall(rawFunction\" + (args.length ? \", \" : \"\") + args.join(\", \") + \");\\n\";\n\t\t\t\t\tbody += \"};\\n\";\n\t\t\t\t\treturn new Function(\"dynCall\", \"rawFunction\", body)(dynCall, rawFunction)\n\t\t\t\t}\n\t\t\t\tvar fp;\n\t\t\t\tif (Module[\"FUNCTION_TABLE_\" + signature] !== undefined) {\n\t\t\t\t\tfp = Module[\"FUNCTION_TABLE_\" + signature][rawFunction]\n\t\t\t\t} else if (typeof FUNCTION_TABLE !== \"undefined\") {\n\t\t\t\t\tfp = FUNCTION_TABLE[rawFunction]\n\t\t\t\t} else {\n\t\t\t\t\tvar dc = Module[\"dynCall_\" + signature];\n\t\t\t\t\tif (dc === undefined) {\n\t\t\t\t\t\tdc = Module[\"dynCall_\" + signature.replace(/f/g, \"d\")];\n\t\t\t\t\t\tif (dc === undefined) {\n\t\t\t\t\t\t\tthrowBindingError(\"No dynCall invoker for signature: \" + signature)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfp = makeDynCaller(dc)\n\t\t\t\t}\n\t\t\t\tif (typeof fp !== \"function\") {\n\t\t\t\t\tthrowBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction)\n\t\t\t\t}\n\t\t\t\treturn fp\n\t\t\t}\n\t\t\tvar UnboundTypeError = undefined;\n\n\t\t\tfunction getTypeName(type) {\n\t\t\t\tvar ptr = ___getTypeName(type);\n\t\t\t\tvar rv = readLatin1String(ptr);\n\t\t\t\t_free(ptr);\n\t\t\t\treturn rv\n\t\t\t}\n\n\t\t\tfunction throwUnboundTypeError(message, types) {\n\t\t\t\tvar unboundTypes = [];\n\t\t\t\tvar seen = {};\n\n\t\t\t\tfunction visit(type) {\n\t\t\t\t\tif (seen[type]) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (registeredTypes[type]) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (typeDependencies[type]) {\n\t\t\t\t\t\ttypeDependencies[type].forEach(visit);\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tunboundTypes.push(type);\n\t\t\t\t\tseen[type] = true\n\t\t\t\t}\n\t\t\t\ttypes.forEach(visit);\n\t\t\t\tthrow new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]))\n\t\t\t}\n\n\t\t\tfunction __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {\n\t\t\t\tname = readLatin1String(name);\n\t\t\t\tgetActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n\t\t\t\tif (upcast) {\n\t\t\t\t\tupcast = embind__requireFunction(upcastSignature, upcast)\n\t\t\t\t}\n\t\t\t\tif (downcast) {\n\t\t\t\t\tdowncast = embind__requireFunction(downcastSignature, downcast)\n\t\t\t\t}\n\t\t\t\trawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n\t\t\t\tvar legalFunctionName = makeLegalFunctionName(name);\n\t\t\t\texposePublicSymbol(legalFunctionName, function () {\n\t\t\t\t\tthrowUnboundTypeError(\"Cannot construct \" + name + \" due to unbound types\", [baseClassRawType])\n\t\t\t\t});\n\t\t\t\twhenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function (base) {\n\t\t\t\t\tbase = base[0];\n\t\t\t\t\tvar baseClass;\n\t\t\t\t\tvar basePrototype;\n\t\t\t\t\tif (baseClassRawType) {\n\t\t\t\t\t\tbaseClass = base.registeredClass;\n\t\t\t\t\t\tbasePrototype = baseClass.instancePrototype\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbasePrototype = ClassHandle.prototype\n\t\t\t\t\t}\n\t\t\t\t\tvar constructor = createNamedFunction(legalFunctionName, function () {\n\t\t\t\t\t\tif (Object.getPrototypeOf(this) !== instancePrototype) {\n\t\t\t\t\t\t\tthrow new BindingError(\"Use 'new' to construct \" + name)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (undefined === registeredClass.constructor_body) {\n\t\t\t\t\t\t\tthrow new BindingError(name + \" has no accessible constructor\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar body = registeredClass.constructor_body[arguments.length];\n\t\t\t\t\t\tif (undefined === body) {\n\t\t\t\t\t\t\tthrow new BindingError(\"Tried to invoke ctor of \" + name + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn body.apply(this, arguments)\n\t\t\t\t\t});\n\t\t\t\t\tvar instancePrototype = Object.create(basePrototype, {\n\t\t\t\t\t\tconstructor: {\n\t\t\t\t\t\t\tvalue: constructor\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tconstructor.prototype = instancePrototype;\n\t\t\t\t\tvar registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n\t\t\t\t\tvar referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\n\t\t\t\t\tvar pointerConverter = new RegisteredPointer(name + \"*\", registeredClass, false, false, false);\n\t\t\t\t\tvar constPointerConverter = new RegisteredPointer(name + \" const*\", registeredClass, false, true, false);\n\t\t\t\t\tregisteredPointers[rawType] = {\n\t\t\t\t\t\tpointerType: pointerConverter,\n\t\t\t\t\t\tconstPointerType: constPointerConverter\n\t\t\t\t\t};\n\t\t\t\t\treplacePublicSymbol(legalFunctionName, constructor);\n\t\t\t\t\treturn [referenceConverter, pointerConverter, constPointerConverter]\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tfunction heap32VectorToArray(count, firstElement) {\n\t\t\t\tvar array = [];\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tarray.push(HEAP32[(firstElement >> 2) + i])\n\t\t\t\t}\n\t\t\t\treturn array\n\t\t\t}\n\n\t\t\tfunction __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n\t\t\t\tassert(argCount > 0);\n\t\t\t\tvar rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n\t\t\t\tinvoker = embind__requireFunction(invokerSignature, invoker);\n\t\t\t\tvar args = [rawConstructor];\n\t\t\t\tvar destructors = [];\n\t\t\t\twhenDependentTypesAreResolved([], [rawClassType], function (classType) {\n\t\t\t\t\tclassType = classType[0];\n\t\t\t\t\tvar humanName = \"constructor \" + classType.name;\n\t\t\t\t\tif (undefined === classType.registeredClass.constructor_body) {\n\t\t\t\t\t\tclassType.registeredClass.constructor_body = []\n\t\t\t\t\t}\n\t\t\t\t\tif (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n\t\t\t\t\t\tthrow new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")\n\t\t\t\t\t}\n\t\t\t\t\tclassType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n\t\t\t\t\t\tthrowUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes)\n\t\t\t\t\t};\n\t\t\t\t\twhenDependentTypesAreResolved([], rawArgTypes, function (argTypes) {\n\t\t\t\t\t\tclassType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n\t\t\t\t\t\t\tif (arguments.length !== argCount - 1) {\n\t\t\t\t\t\t\t\tthrowBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdestructors.length = 0;\n\t\t\t\t\t\t\targs.length = argCount;\n\t\t\t\t\t\t\tfor (var i = 1; i < argCount; ++i) {\n\t\t\t\t\t\t\t\targs[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar ptr = invoker.apply(null, args);\n\t\t\t\t\t\t\trunDestructors(destructors);\n\t\t\t\t\t\t\treturn argTypes[0][\"fromWireType\"](ptr)\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn []\n\t\t\t\t\t});\n\t\t\t\t\treturn []\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tfunction new_(constructor, argumentList) {\n\t\t\t\tif (!(constructor instanceof Function)) {\n\t\t\t\t\tthrow new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\")\n\t\t\t\t}\n\t\t\t\tvar dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function () {});\n\t\t\t\tdummy.prototype = constructor.prototype;\n\t\t\t\tvar obj = new dummy;\n\t\t\t\tvar r = constructor.apply(obj, argumentList);\n\t\t\t\treturn r instanceof Object ? r : obj\n\t\t\t}\n\n\t\t\tfunction craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n\t\t\t\tvar argCount = argTypes.length;\n\t\t\t\tif (argCount < 2) {\n\t\t\t\t\tthrowBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")\n\t\t\t\t}\n\t\t\t\tvar isClassMethodFunc = argTypes[1] !== null && classType !== null;\n\t\t\t\tvar needsDestructorStack = false;\n\t\t\t\tfor (var i = 1; i < argTypes.length; ++i) {\n\t\t\t\t\tif (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n\t\t\t\t\t\tneedsDestructorStack = true;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar returns = argTypes[0].name !== \"void\";\n\t\t\t\tvar argsList = \"\";\n\t\t\t\tvar argsListWired = \"\";\n\t\t\t\tfor (var i = 0; i < argCount - 2; ++i) {\n\t\t\t\t\targsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n\t\t\t\t\targsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\"\n\t\t\t\t}\n\t\t\t\tvar invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\n\" + \"if (arguments.length !== \" + (argCount - 2) + \") {\\n\" + \"throwBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n\" + \"}\\n\";\n\t\t\t\tif (needsDestructorStack) {\n\t\t\t\t\tinvokerFnBody += \"var destructors = [];\\n\"\n\t\t\t\t}\n\t\t\t\tvar dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n\t\t\t\tvar args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n\t\t\t\tvar args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n\t\t\t\tif (isClassMethodFunc) {\n\t\t\t\t\tinvokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\"\n\t\t\t\t}\n\t\t\t\tfor (var i = 0; i < argCount - 2; ++i) {\n\t\t\t\t\tinvokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n\t\t\t\t\targs1.push(\"argType\" + i);\n\t\t\t\t\targs2.push(argTypes[i + 2])\n\t\t\t\t}\n\t\t\t\tif (isClassMethodFunc) {\n\t\t\t\t\targsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired\n\t\t\t\t}\n\t\t\t\tinvokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n\t\t\t\tif (needsDestructorStack) {\n\t\t\t\t\tinvokerFnBody += \"runDestructors(destructors);\\n\"\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n\t\t\t\t\t\tvar paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n\t\t\t\t\t\tif (argTypes[i].destructorFunction !== null) {\n\t\t\t\t\t\t\tinvokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n\t\t\t\t\t\t\targs1.push(paramName + \"_dtor\");\n\t\t\t\t\t\t\targs2.push(argTypes[i].destructorFunction)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (returns) {\n\t\t\t\t\tinvokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\"\n\t\t\t\t} else {}\n\t\t\t\tinvokerFnBody += \"}\\n\";\n\t\t\t\targs1.push(invokerFnBody);\n\t\t\t\tvar invokerFunction = new_(Function, args1).apply(null, args2);\n\t\t\t\treturn invokerFunction\n\t\t\t}\n\n\t\t\tfunction __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n\t\t\t\tvar rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n\t\t\t\tmethodName = readLatin1String(methodName);\n\t\t\t\trawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n\t\t\t\twhenDependentTypesAreResolved([], [rawClassType], function (classType) {\n\t\t\t\t\tclassType = classType[0];\n\t\t\t\t\tvar humanName = classType.name + \".\" + methodName;\n\t\t\t\t\tif (isPureVirtual) {\n\t\t\t\t\t\tclassType.registeredClass.pureVirtualFunctions.push(methodName)\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction unboundTypesHandler() {\n\t\t\t\t\t\tthrowUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes)\n\t\t\t\t\t}\n\t\t\t\t\tvar proto = classType.registeredClass.instancePrototype;\n\t\t\t\t\tvar method = proto[methodName];\n\t\t\t\t\tif (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {\n\t\t\t\t\t\tunboundTypesHandler.argCount = argCount - 2;\n\t\t\t\t\t\tunboundTypesHandler.className = classType.name;\n\t\t\t\t\t\tproto[methodName] = unboundTypesHandler\n\t\t\t\t\t} else {\n\t\t\t\t\t\tensureOverloadTable(proto, methodName, humanName);\n\t\t\t\t\t\tproto[methodName].overloadTable[argCount - 2] = unboundTypesHandler\n\t\t\t\t\t}\n\t\t\t\t\twhenDependentTypesAreResolved([], rawArgTypes, function (argTypes) {\n\t\t\t\t\t\tvar memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n\t\t\t\t\t\tif (undefined === proto[methodName].overloadTable) {\n\t\t\t\t\t\t\tmemberFunction.argCount = argCount - 2;\n\t\t\t\t\t\t\tproto[methodName] = memberFunction\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tproto[methodName].overloadTable[argCount - 2] = memberFunction\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn []\n\t\t\t\t\t});\n\t\t\t\t\treturn []\n\t\t\t\t})\n\t\t\t}\n\t\t\tvar emval_free_list = [];\n\t\t\tvar emval_handle_array = [{}, {\n\t\t\t\tvalue: undefined\n\t\t\t}, {\n\t\t\t\tvalue: null\n\t\t\t}, {\n\t\t\t\tvalue: true\n\t\t\t}, {\n\t\t\t\tvalue: false\n\t\t\t}];\n\n\t\t\tfunction __emval_decref(handle) {\n\t\t\t\tif (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\n\t\t\t\t\temval_handle_array[handle] = undefined;\n\t\t\t\t\temval_free_list.push(handle)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction count_emval_handles() {\n\t\t\t\tvar count = 0;\n\t\t\t\tfor (var i = 5; i < emval_handle_array.length; ++i) {\n\t\t\t\t\tif (emval_handle_array[i] !== undefined) {\n\t\t\t\t\t\t++count\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn count\n\t\t\t}\n\n\t\t\tfunction get_first_emval() {\n\t\t\t\tfor (var i = 5; i < emval_handle_array.length; ++i) {\n\t\t\t\t\tif (emval_handle_array[i] !== undefined) {\n\t\t\t\t\t\treturn emval_handle_array[i]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null\n\t\t\t}\n\n\t\t\tfunction init_emval() {\n\t\t\t\tModule[\"count_emval_handles\"] = count_emval_handles;\n\t\t\t\tModule[\"get_first_emval\"] = get_first_emval\n\t\t\t}\n\n\t\t\tfunction __emval_register(value) {\n\t\t\t\tswitch (value) {\n\t\t\t\t\tcase undefined: {\n\t\t\t\t\t\treturn 1\n\t\t\t\t\t}\n\t\t\t\t\tcase null: {\n\t\t\t\t\t\treturn 2\n\t\t\t\t\t}\n\t\t\t\t\tcase true: {\n\t\t\t\t\t\treturn 3\n\t\t\t\t\t}\n\t\t\t\t\tcase false: {\n\t\t\t\t\t\treturn 4\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tvar handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n\t\t\t\t\t\temval_handle_array[handle] = {\n\t\t\t\t\t\t\trefcount: 1,\n\t\t\t\t\t\t\tvalue: value\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn handle\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction __embind_register_emval(rawType, name) {\n\t\t\t\tname = readLatin1String(name);\n\t\t\t\tregisterType(rawType, {\n\t\t\t\t\tname: name,\n\t\t\t\t\t\"fromWireType\": function (handle) {\n\t\t\t\t\t\tvar rv = emval_handle_array[handle].value;\n\t\t\t\t\t\t__emval_decref(handle);\n\t\t\t\t\t\treturn rv\n\t\t\t\t\t},\n\t\t\t\t\t\"toWireType\": function (destructors, value) {\n\t\t\t\t\t\treturn __emval_register(value)\n\t\t\t\t\t},\n\t\t\t\t\t\"argPackAdvance\": 8,\n\t\t\t\t\t\"readValueFromPointer\": simpleReadValueFromPointer,\n\t\t\t\t\tdestructorFunction: null\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tfunction _embind_repr(v) {\n\t\t\t\tif (v === null) {\n\t\t\t\t\treturn \"null\"\n\t\t\t\t}\n\t\t\t\tvar t = typeof v;\n\t\t\t\tif (t === \"object\" || t === \"array\" || t === \"function\") {\n\t\t\t\t\treturn v.toString()\n\t\t\t\t} else {\n\t\t\t\t\treturn \"\" + v\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction floatReadValueFromPointer(name, shift) {\n\t\t\t\tswitch (shift) {\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturn function (pointer) {\n\t\t\t\t\t\t\treturn this[\"fromWireType\"](HEAPF32[pointer >> 2])\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturn function (pointer) {\n\t\t\t\t\t\t\treturn this[\"fromWireType\"](HEAPF64[pointer >> 3])\n\t\t\t\t\t\t};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new TypeError(\"Unknown float type: \" + name)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction __embind_register_float(rawType, name, size) {\n\t\t\t\tvar shift = getShiftFromSize(size);\n\t\t\t\tname = readLatin1String(name);\n\t\t\t\tregisterType(rawType, {\n\t\t\t\t\tname: name,\n\t\t\t\t\t\"fromWireType\": function (value) {\n\t\t\t\t\t\treturn value\n\t\t\t\t\t},\n\t\t\t\t\t\"toWireType\": function (destructors, value) {\n\t\t\t\t\t\tif (typeof value !== \"number\" && typeof value !== \"boolean\") {\n\t\t\t\t\t\t\tthrow new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value\n\t\t\t\t\t},\n\t\t\t\t\t\"argPackAdvance\": 8,\n\t\t\t\t\t\"readValueFromPointer\": floatReadValueFromPointer(name, shift),\n\t\t\t\t\tdestructorFunction: null\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tfunction integerReadValueFromPointer(name, shift, signed) {\n\t\t\t\tswitch (shift) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturn signed ? function readS8FromPointer(pointer) {\n\t\t\t\t\t\t\treturn HEAP8[pointer]\n\t\t\t\t\t\t} : function readU8FromPointer(pointer) {\n\t\t\t\t\t\t\treturn HEAPU8[pointer]\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn signed ? function readS16FromPointer(pointer) {\n\t\t\t\t\t\t\treturn HEAP16[pointer >> 1]\n\t\t\t\t\t\t} : function readU16FromPointer(pointer) {\n\t\t\t\t\t\t\treturn HEAPU16[pointer >> 1]\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturn signed ? function readS32FromPointer(pointer) {\n\t\t\t\t\t\t\treturn HEAP32[pointer >> 2]\n\t\t\t\t\t\t} : function readU32FromPointer(pointer) {\n\t\t\t\t\t\t\treturn HEAPU32[pointer >> 2]\n\t\t\t\t\t\t};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new TypeError(\"Unknown integer type: \" + name)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n\t\t\t\tname = readLatin1String(name);\n\t\t\t\tif (maxRange === -1) {\n\t\t\t\t\tmaxRange = 4294967295\n\t\t\t\t}\n\t\t\t\tvar shift = getShiftFromSize(size);\n\t\t\t\tvar fromWireType = function (value) {\n\t\t\t\t\treturn value\n\t\t\t\t};\n\t\t\t\tif (minRange === 0) {\n\t\t\t\t\tvar bitshift = 32 - 8 * size;\n\t\t\t\t\tfromWireType = function (value) {\n\t\t\t\t\t\treturn value << bitshift >>> bitshift\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar isUnsignedType = name.indexOf(\"unsigned\") != -1;\n\t\t\t\tregisterType(primitiveType, {\n\t\t\t\t\tname: name,\n\t\t\t\t\t\"fromWireType\": fromWireType,\n\t\t\t\t\t\"toWireType\": function (destructors, value) {\n\t\t\t\t\t\tif (typeof value !== \"number\" && typeof value !== \"boolean\") {\n\t\t\t\t\t\t\tthrow new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value < minRange || value > maxRange) {\n\t\t\t\t\t\t\tthrow new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn isUnsignedType ? value >>> 0 : value | 0\n\t\t\t\t\t},\n\t\t\t\t\t\"argPackAdvance\": 8,\n\t\t\t\t\t\"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\n\t\t\t\t\tdestructorFunction: null\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tfunction __embind_register_memory_view(rawType, dataTypeIndex, name) {\n\t\t\t\tvar typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n\t\t\t\tvar TA = typeMapping[dataTypeIndex];\n\n\t\t\t\tfunction decodeMemoryView(handle) {\n\t\t\t\t\thandle = handle >> 2;\n\t\t\t\t\tvar heap = HEAPU32;\n\t\t\t\t\tvar size = heap[handle];\n\t\t\t\t\tvar data = heap[handle + 1];\n\t\t\t\t\treturn new TA(heap[\"buffer\"], data, size)\n\t\t\t\t}\n\t\t\t\tname = readLatin1String(name);\n\t\t\t\tregisterType(rawType, {\n\t\t\t\t\tname: name,\n\t\t\t\t\t\"fromWireType\": decodeMemoryView,\n\t\t\t\t\t\"argPackAdvance\": 8,\n\t\t\t\t\t\"readValueFromPointer\": decodeMemoryView\n\t\t\t\t}, {\n\t\t\t\t\tignoreDuplicateRegistrations: true\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tfunction __embind_register_std_string(rawType, name) {\n\t\t\t\tname = readLatin1String(name);\n\t\t\t\tvar stdStringIsUTF8 = name === \"std::string\";\n\t\t\t\tregisterType(rawType, {\n\t\t\t\t\tname: name,\n\t\t\t\t\t\"fromWireType\": function (value) {\n\t\t\t\t\t\tvar length = HEAPU32[value >> 2];\n\t\t\t\t\t\tvar str;\n\t\t\t\t\t\tif (stdStringIsUTF8) {\n\t\t\t\t\t\t\tvar endChar = HEAPU8[value + 4 + length];\n\t\t\t\t\t\t\tvar endCharSwap = 0;\n\t\t\t\t\t\t\tif (endChar != 0) {\n\t\t\t\t\t\t\t\tendCharSwap = endChar;\n\t\t\t\t\t\t\t\tHEAPU8[value + 4 + length] = 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar decodeStartPtr = value + 4;\n\t\t\t\t\t\t\tfor (var i = 0; i <= length; ++i) {\n\t\t\t\t\t\t\t\tvar currentBytePtr = value + 4 + i;\n\t\t\t\t\t\t\t\tif (HEAPU8[currentBytePtr] == 0) {\n\t\t\t\t\t\t\t\t\tvar stringSegment = UTF8ToString(decodeStartPtr);\n\t\t\t\t\t\t\t\t\tif (str === undefined) str = stringSegment;\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tstr += String.fromCharCode(0);\n\t\t\t\t\t\t\t\t\t\tstr += stringSegment\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdecodeStartPtr = currentBytePtr + 1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (endCharSwap != 0) HEAPU8[value + 4 + length] = endCharSwap\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar a = new Array(length);\n\t\t\t\t\t\t\tfor (var i = 0; i < length; ++i) {\n\t\t\t\t\t\t\t\ta[i] = String.fromCharCode(HEAPU8[value + 4 + i])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr = a.join(\"\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_free(value);\n\t\t\t\t\t\treturn str\n\t\t\t\t\t},\n\t\t\t\t\t\"toWireType\": function (destructors, value) {\n\t\t\t\t\t\tif (value instanceof ArrayBuffer) {\n\t\t\t\t\t\t\tvalue = new Uint8Array(value)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar getLength;\n\t\t\t\t\t\tvar valueIsOfTypeString = typeof value === \"string\";\n\t\t\t\t\t\tif (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n\t\t\t\t\t\t\tthrowBindingError(\"Cannot pass non-string to std::string\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (stdStringIsUTF8 && valueIsOfTypeString) {\n\t\t\t\t\t\t\tgetLength = function () {\n\t\t\t\t\t\t\t\treturn lengthBytesUTF8(value)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgetLength = function () {\n\t\t\t\t\t\t\t\treturn value.length\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar length = getLength();\n\t\t\t\t\t\tvar ptr = _malloc(4 + length + 1);\n\t\t\t\t\t\tHEAPU32[ptr >> 2] = length;\n\t\t\t\t\t\tif (stdStringIsUTF8 && valueIsOfTypeString) {\n\t\t\t\t\t\t\tstringToUTF8(value, ptr + 4, length + 1)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (valueIsOfTypeString) {\n\t\t\t\t\t\t\t\tfor (var i = 0; i < length; ++i) {\n\t\t\t\t\t\t\t\t\tvar charCode = value.charCodeAt(i);\n\t\t\t\t\t\t\t\t\tif (charCode > 255) {\n\t\t\t\t\t\t\t\t\t\t_free(ptr);\n\t\t\t\t\t\t\t\t\t\tthrowBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tHEAPU8[ptr + 4 + i] = charCode\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfor (var i = 0; i < length; ++i) {\n\t\t\t\t\t\t\t\t\tHEAPU8[ptr + 4 + i] = value[i]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (destructors !== null) {\n\t\t\t\t\t\t\tdestructors.push(_free, ptr)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ptr\n\t\t\t\t\t},\n\t\t\t\t\t\"argPackAdvance\": 8,\n\t\t\t\t\t\"readValueFromPointer\": simpleReadValueFromPointer,\n\t\t\t\t\tdestructorFunction: function (ptr) {\n\t\t\t\t\t\t_free(ptr)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tfunction __embind_register_std_wstring(rawType, charSize, name) {\n\t\t\t\tname = readLatin1String(name);\n\t\t\t\tvar getHeap, shift;\n\t\t\t\tif (charSize === 2) {\n\t\t\t\t\tgetHeap = function () {\n\t\t\t\t\t\treturn HEAPU16\n\t\t\t\t\t};\n\t\t\t\t\tshift = 1\n\t\t\t\t} else if (charSize === 4) {\n\t\t\t\t\tgetHeap = function () {\n\t\t\t\t\t\treturn HEAPU32\n\t\t\t\t\t};\n\t\t\t\t\tshift = 2\n\t\t\t\t}\n\t\t\t\tregisterType(rawType, {\n\t\t\t\t\tname: name,\n\t\t\t\t\t\"fromWireType\": function (value) {\n\t\t\t\t\t\tvar HEAP = getHeap();\n\t\t\t\t\t\tvar length = HEAPU32[value >> 2];\n\t\t\t\t\t\tvar a = new Array(length);\n\t\t\t\t\t\tvar start = value + 4 >> shift;\n\t\t\t\t\t\tfor (var i = 0; i < length; ++i) {\n\t\t\t\t\t\t\ta[i] = String.fromCharCode(HEAP[start + i])\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_free(value);\n\t\t\t\t\t\treturn a.join(\"\")\n\t\t\t\t\t},\n\t\t\t\t\t\"toWireType\": function (destructors, value) {\n\t\t\t\t\t\tvar length = value.length;\n\t\t\t\t\t\tvar ptr = _malloc(4 + length * charSize);\n\t\t\t\t\t\tvar HEAP = getHeap();\n\t\t\t\t\t\tHEAPU32[ptr >> 2] = length;\n\t\t\t\t\t\tvar start = ptr + 4 >> shift;\n\t\t\t\t\t\tfor (var i = 0; i < length; ++i) {\n\t\t\t\t\t\t\tHEAP[start + i] = value.charCodeAt(i)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (destructors !== null) {\n\t\t\t\t\t\t\tdestructors.push(_free, ptr)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ptr\n\t\t\t\t\t},\n\t\t\t\t\t\"argPackAdvance\": 8,\n\t\t\t\t\t\"readValueFromPointer\": simpleReadValueFromPointer,\n\t\t\t\t\tdestructorFunction: function (ptr) {\n\t\t\t\t\t\t_free(ptr)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tfunction __embind_register_value_object(rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n\t\t\t\tstructRegistrations[rawType] = {\n\t\t\t\t\tname: readLatin1String(name),\n\t\t\t\t\trawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n\t\t\t\t\trawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n\t\t\t\t\tfields: []\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n\t\t\t\tstructRegistrations[structType].fields.push({\n\t\t\t\t\tfieldName: readLatin1String(fieldName),\n\t\t\t\t\tgetterReturnType: getterReturnType,\n\t\t\t\t\tgetter: embind__requireFunction(getterSignature, getter),\n\t\t\t\t\tgetterContext: getterContext,\n\t\t\t\t\tsetterArgumentType: setterArgumentType,\n\t\t\t\t\tsetter: embind__requireFunction(setterSignature, setter),\n\t\t\t\t\tsetterContext: setterContext\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tfunction __embind_register_void(rawType, name) {\n\t\t\t\tname = readLatin1String(name);\n\t\t\t\tregisterType(rawType, {\n\t\t\t\t\tisVoid: true,\n\t\t\t\t\tname: name,\n\t\t\t\t\t\"argPackAdvance\": 0,\n\t\t\t\t\t\"fromWireType\": function () {\n\t\t\t\t\t\treturn undefined\n\t\t\t\t\t},\n\t\t\t\t\t\"toWireType\": function (destructors, o) {\n\t\t\t\t\t\treturn undefined\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tfunction __emval_incref(handle) {\n\t\t\t\tif (handle > 4) {\n\t\t\t\t\temval_handle_array[handle].refcount += 1\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction requireRegisteredType(rawType, humanName) {\n\t\t\t\tvar impl = registeredTypes[rawType];\n\t\t\t\tif (undefined === impl) {\n\t\t\t\t\tthrowBindingError(humanName + \" has unknown type \" + getTypeName(rawType))\n\t\t\t\t}\n\t\t\t\treturn impl\n\t\t\t}\n\n\t\t\tfunction __emval_take_value(type, argv) {\n\t\t\t\ttype = requireRegisteredType(type, \"_emval_take_value\");\n\t\t\t\tvar v = type[\"readValueFromPointer\"](argv);\n\t\t\t\treturn __emval_register(v)\n\t\t\t}\n\n\t\t\tfunction _abort() {\n\t\t\t\tabort()\n\t\t\t}\n\n\t\t\tfunction _emscripten_get_heap_size() {\n\t\t\t\treturn HEAP8.length\n\t\t\t}\n\n\t\t\tfunction abortOnCannotGrowMemory(requestedSize) {\n\t\t\t\tabort(\"OOM\")\n\t\t\t}\n\n\t\t\tfunction emscripten_realloc_buffer(size) {\n\t\t\t\ttry {\n\t\t\t\t\twasmMemory.grow(size - buffer.byteLength + 65535 >> 16);\n\t\t\t\t\tupdateGlobalBufferAndViews(wasmMemory.buffer);\n\t\t\t\t\treturn 1\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\tfunction _emscripten_resize_heap(requestedSize) {\n\t\t\t\tvar oldSize = _emscripten_get_heap_size();\n\t\t\t\tvar PAGE_MULTIPLE = 65536;\n\t\t\t\tvar LIMIT = 2147483648 - PAGE_MULTIPLE;\n\t\t\t\tif (requestedSize > LIMIT) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tvar MIN_TOTAL_MEMORY = 16777216;\n\t\t\t\tvar newSize = Math.max(oldSize, MIN_TOTAL_MEMORY);\n\t\t\t\twhile (newSize < requestedSize) {\n\t\t\t\t\tif (newSize <= 536870912) {\n\t\t\t\t\t\tnewSize = alignUp(2 * newSize, PAGE_MULTIPLE)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewSize = Math.min(alignUp((3 * newSize + 2147483648) / 4, PAGE_MULTIPLE), LIMIT)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar replacement = emscripten_realloc_buffer(newSize);\n\t\t\t\tif (!replacement) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t}\n\n\t\t\tfunction _getenv(name) {\n\t\t\t\tif (name === 0) return 0;\n\t\t\t\tname = UTF8ToString(name);\n\t\t\t\tif (!ENV.hasOwnProperty(name)) return 0;\n\t\t\t\tif (_getenv.ret) _free(_getenv.ret);\n\t\t\t\t_getenv.ret = allocateUTF8(ENV[name]);\n\t\t\t\treturn _getenv.ret\n\t\t\t}\n\n\t\t\tfunction _emscripten_memcpy_big(dest, src, num) {\n\t\t\t\tHEAPU8.set(HEAPU8.subarray(src, src + num), dest)\n\t\t\t}\n\n\t\t\tfunction _pthread_attr_init(attr) {\n\t\t\t\treturn 0\n\t\t\t}\n\n\t\t\tfunction _pthread_attr_setdetachstate() {}\n\n\t\t\tfunction _pthread_cond_destroy() {\n\t\t\t\treturn 0\n\t\t\t}\n\n\t\t\tfunction _pthread_cond_init() {\n\t\t\t\treturn 0\n\t\t\t}\n\n\t\t\tfunction _pthread_create() {\n\t\t\t\treturn 6\n\t\t\t}\n\n\t\t\tfunction _pthread_join() {}\n\n\t\t\tfunction ___setErrNo(value) {\n\t\t\t\tif (Module[\"___errno_location\"]) HEAP32[Module[\"___errno_location\"]() >> 2] = value;\n\t\t\t\treturn value\n\t\t\t}\n\n\t\t\tfunction _sysconf(name) {\n\t\t\t\tswitch (name) {\n\t\t\t\t\tcase 30:\n\t\t\t\t\t\treturn PAGE_SIZE;\n\t\t\t\t\tcase 85:\n\t\t\t\t\t\tvar maxHeapSize = 2 * 1024 * 1024 * 1024 - 65536;\n\t\t\t\t\t\treturn maxHeapSize / PAGE_SIZE;\n\t\t\t\t\tcase 132:\n\t\t\t\t\tcase 133:\n\t\t\t\t\tcase 12:\n\t\t\t\t\tcase 137:\n\t\t\t\t\tcase 138:\n\t\t\t\t\tcase 15:\n\t\t\t\t\tcase 235:\n\t\t\t\t\tcase 16:\n\t\t\t\t\tcase 17:\n\t\t\t\t\tcase 18:\n\t\t\t\t\tcase 19:\n\t\t\t\t\tcase 20:\n\t\t\t\t\tcase 149:\n\t\t\t\t\tcase 13:\n\t\t\t\t\tcase 10:\n\t\t\t\t\tcase 236:\n\t\t\t\t\tcase 153:\n\t\t\t\t\tcase 9:\n\t\t\t\t\tcase 21:\n\t\t\t\t\tcase 22:\n\t\t\t\t\tcase 159:\n\t\t\t\t\tcase 154:\n\t\t\t\t\tcase 14:\n\t\t\t\t\tcase 77:\n\t\t\t\t\tcase 78:\n\t\t\t\t\tcase 139:\n\t\t\t\t\tcase 80:\n\t\t\t\t\tcase 81:\n\t\t\t\t\tcase 82:\n\t\t\t\t\tcase 68:\n\t\t\t\t\tcase 67:\n\t\t\t\t\tcase 164:\n\t\t\t\t\tcase 11:\n\t\t\t\t\tcase 29:\n\t\t\t\t\tcase 47:\n\t\t\t\t\tcase 48:\n\t\t\t\t\tcase 95:\n\t\t\t\t\tcase 52:\n\t\t\t\t\tcase 51:\n\t\t\t\t\tcase 46:\n\t\t\t\t\t\treturn 200809;\n\t\t\t\t\tcase 79:\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tcase 27:\n\t\t\t\t\tcase 246:\n\t\t\t\t\tcase 127:\n\t\t\t\t\tcase 128:\n\t\t\t\t\tcase 23:\n\t\t\t\t\tcase 24:\n\t\t\t\t\tcase 160:\n\t\t\t\t\tcase 161:\n\t\t\t\t\tcase 181:\n\t\t\t\t\tcase 182:\n\t\t\t\t\tcase 242:\n\t\t\t\t\tcase 183:\n\t\t\t\t\tcase 184:\n\t\t\t\t\tcase 243:\n\t\t\t\t\tcase 244:\n\t\t\t\t\tcase 245:\n\t\t\t\t\tcase 165:\n\t\t\t\t\tcase 178:\n\t\t\t\t\tcase 179:\n\t\t\t\t\tcase 49:\n\t\t\t\t\tcase 50:\n\t\t\t\t\tcase 168:\n\t\t\t\t\tcase 169:\n\t\t\t\t\tcase 175:\n\t\t\t\t\tcase 170:\n\t\t\t\t\tcase 171:\n\t\t\t\t\tcase 172:\n\t\t\t\t\tcase 97:\n\t\t\t\t\tcase 76:\n\t\t\t\t\tcase 32:\n\t\t\t\t\tcase 173:\n\t\t\t\t\tcase 35:\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\tcase 176:\n\t\t\t\t\tcase 177:\n\t\t\t\t\tcase 7:\n\t\t\t\t\tcase 155:\n\t\t\t\t\tcase 8:\n\t\t\t\t\tcase 157:\n\t\t\t\t\tcase 125:\n\t\t\t\t\tcase 126:\n\t\t\t\t\tcase 92:\n\t\t\t\t\tcase 93:\n\t\t\t\t\tcase 129:\n\t\t\t\t\tcase 130:\n\t\t\t\t\tcase 131:\n\t\t\t\t\tcase 94:\n\t\t\t\t\tcase 91:\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\tcase 74:\n\t\t\t\t\tcase 60:\n\t\t\t\t\tcase 69:\n\t\t\t\t\tcase 70:\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\treturn 1024;\n\t\t\t\t\tcase 31:\n\t\t\t\t\tcase 42:\n\t\t\t\t\tcase 72:\n\t\t\t\t\t\treturn 32;\n\t\t\t\t\tcase 87:\n\t\t\t\t\tcase 26:\n\t\t\t\t\tcase 33:\n\t\t\t\t\t\treturn 2147483647;\n\t\t\t\t\tcase 34:\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn 47839;\n\t\t\t\t\tcase 38:\n\t\t\t\t\tcase 36:\n\t\t\t\t\t\treturn 99;\n\t\t\t\t\tcase 43:\n\t\t\t\t\tcase 37:\n\t\t\t\t\t\treturn 2048;\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturn 2097152;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturn 65536;\n\t\t\t\t\tcase 28:\n\t\t\t\t\t\treturn 32768;\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\treturn 32767;\n\t\t\t\t\tcase 75:\n\t\t\t\t\t\treturn 16384;\n\t\t\t\t\tcase 39:\n\t\t\t\t\t\treturn 1e3;\n\t\t\t\t\tcase 89:\n\t\t\t\t\t\treturn 700;\n\t\t\t\t\tcase 71:\n\t\t\t\t\t\treturn 256;\n\t\t\t\t\tcase 40:\n\t\t\t\t\t\treturn 255;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturn 100;\n\t\t\t\t\tcase 180:\n\t\t\t\t\t\treturn 64;\n\t\t\t\t\tcase 25:\n\t\t\t\t\t\treturn 20;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\treturn 6;\n\t\t\t\t\tcase 73:\n\t\t\t\t\t\treturn 4;\n\t\t\t\t\tcase 84: {\n\t\t\t\t\t\tif (typeof navigator === \"object\") return navigator[\"hardwareConcurrency\"] || 1;\n\t\t\t\t\t\treturn 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t___setErrNo(28);\n\t\t\t\treturn -1\n\t\t\t}\n\t\t\tInternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n\t\t\tembind_init_charCodes();\n\t\t\tBindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n\t\t\tinit_ClassHandle();\n\t\t\tinit_RegisteredPointer();\n\t\t\tinit_embind();\n\t\t\tUnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n\t\t\tinit_emval();\n\t\t\tvar ASSERTIONS = false;\n\t\t\tvar asmGlobalArg = {};\n\t\t\tvar asmLibraryArg = {\n\t\t\t\t\"ClassHandle\": ClassHandle,\n\t\t\t\t\"ClassHandle_clone\": ClassHandle_clone,\n\t\t\t\t\"ClassHandle_delete\": ClassHandle_delete,\n\t\t\t\t\"ClassHandle_deleteLater\": ClassHandle_deleteLater,\n\t\t\t\t\"ClassHandle_isAliasOf\": ClassHandle_isAliasOf,\n\t\t\t\t\"ClassHandle_isDeleted\": ClassHandle_isDeleted,\n\t\t\t\t\"RegisteredClass\": RegisteredClass,\n\t\t\t\t\"RegisteredPointer\": RegisteredPointer,\n\t\t\t\t\"RegisteredPointer_deleteObject\": RegisteredPointer_deleteObject,\n\t\t\t\t\"RegisteredPointer_destructor\": RegisteredPointer_destructor,\n\t\t\t\t\"RegisteredPointer_fromWireType\": RegisteredPointer_fromWireType,\n\t\t\t\t\"RegisteredPointer_getPointee\": RegisteredPointer_getPointee,\n\t\t\t\t\"___buildEnvironment\": ___buildEnvironment,\n\t\t\t\t\"___cxa_allocate_exception\": ___cxa_allocate_exception,\n\t\t\t\t\"___cxa_begin_catch\": ___cxa_begin_catch,\n\t\t\t\t\"___cxa_throw\": ___cxa_throw,\n\t\t\t\t\"___exception_addRef\": ___exception_addRef,\n\t\t\t\t\"___exception_deAdjust\": ___exception_deAdjust,\n\t\t\t\t\"___gxx_personality_v0\": ___gxx_personality_v0,\n\t\t\t\t\"___setErrNo\": ___setErrNo,\n\t\t\t\t\"___wasi_fd_close\": ___wasi_fd_close,\n\t\t\t\t\"___wasi_fd_seek\": ___wasi_fd_seek,\n\t\t\t\t\"___wasi_fd_write\": ___wasi_fd_write,\n\t\t\t\t\"__embind_finalize_value_object\": __embind_finalize_value_object,\n\t\t\t\t\"__embind_register_bool\": __embind_register_bool,\n\t\t\t\t\"__embind_register_class\": __embind_register_class,\n\t\t\t\t\"__embind_register_class_constructor\": __embind_register_class_constructor,\n\t\t\t\t\"__embind_register_class_function\": __embind_register_class_function,\n\t\t\t\t\"__embind_register_emval\": __embind_register_emval,\n\t\t\t\t\"__embind_register_float\": __embind_register_float,\n\t\t\t\t\"__embind_register_integer\": __embind_register_integer,\n\t\t\t\t\"__embind_register_memory_view\": __embind_register_memory_view,\n\t\t\t\t\"__embind_register_std_string\": __embind_register_std_string,\n\t\t\t\t\"__embind_register_std_wstring\": __embind_register_std_wstring,\n\t\t\t\t\"__embind_register_value_object\": __embind_register_value_object,\n\t\t\t\t\"__embind_register_value_object_field\": __embind_register_value_object_field,\n\t\t\t\t\"__embind_register_void\": __embind_register_void,\n\t\t\t\t\"__emval_decref\": __emval_decref,\n\t\t\t\t\"__emval_incref\": __emval_incref,\n\t\t\t\t\"__emval_register\": __emval_register,\n\t\t\t\t\"__emval_take_value\": __emval_take_value,\n\t\t\t\t\"__memory_base\": 1024,\n\t\t\t\t\"__table_base\": 0,\n\t\t\t\t\"_abort\": _abort,\n\t\t\t\t\"_embind_repr\": _embind_repr,\n\t\t\t\t\"_emscripten_get_heap_size\": _emscripten_get_heap_size,\n\t\t\t\t\"_emscripten_memcpy_big\": _emscripten_memcpy_big,\n\t\t\t\t\"_emscripten_resize_heap\": _emscripten_resize_heap,\n\t\t\t\t\"_fd_close\": _fd_close,\n\t\t\t\t\"_fd_seek\": _fd_seek,\n\t\t\t\t\"_fd_write\": _fd_write,\n\t\t\t\t\"_getenv\": _getenv,\n\t\t\t\t\"_pthread_attr_init\": _pthread_attr_init,\n\t\t\t\t\"_pthread_attr_setdetachstate\": _pthread_attr_setdetachstate,\n\t\t\t\t\"_pthread_cond_destroy\": _pthread_cond_destroy,\n\t\t\t\t\"_pthread_cond_init\": _pthread_cond_init,\n\t\t\t\t\"_pthread_create\": _pthread_create,\n\t\t\t\t\"_pthread_join\": _pthread_join,\n\t\t\t\t\"_sysconf\": _sysconf,\n\t\t\t\t\"abort\": abort,\n\t\t\t\t\"abortOnCannotGrowMemory\": abortOnCannotGrowMemory,\n\t\t\t\t\"attachFinalizer\": attachFinalizer,\n\t\t\t\t\"constNoSmartPtrRawPointerToWireType\": constNoSmartPtrRawPointerToWireType,\n\t\t\t\t\"count_emval_handles\": count_emval_handles,\n\t\t\t\t\"craftInvokerFunction\": craftInvokerFunction,\n\t\t\t\t\"createNamedFunction\": createNamedFunction,\n\t\t\t\t\"demangle\": demangle,\n\t\t\t\t\"demangleAll\": demangleAll,\n\t\t\t\t\"detachFinalizer\": detachFinalizer,\n\t\t\t\t\"downcastPointer\": downcastPointer,\n\t\t\t\t\"embind__requireFunction\": embind__requireFunction,\n\t\t\t\t\"embind_init_charCodes\": embind_init_charCodes,\n\t\t\t\t\"emscripten_realloc_buffer\": emscripten_realloc_buffer,\n\t\t\t\t\"ensureOverloadTable\": ensureOverloadTable,\n\t\t\t\t\"exposePublicSymbol\": exposePublicSymbol,\n\t\t\t\t\"extendError\": extendError,\n\t\t\t\t\"floatReadValueFromPointer\": floatReadValueFromPointer,\n\t\t\t\t\"flushPendingDeletes\": flushPendingDeletes,\n\t\t\t\t\"flush_NO_FILESYSTEM\": flush_NO_FILESYSTEM,\n\t\t\t\t\"genericPointerToWireType\": genericPointerToWireType,\n\t\t\t\t\"getBasestPointer\": getBasestPointer,\n\t\t\t\t\"getInheritedInstance\": getInheritedInstance,\n\t\t\t\t\"getInheritedInstanceCount\": getInheritedInstanceCount,\n\t\t\t\t\"getLiveInheritedInstances\": getLiveInheritedInstances,\n\t\t\t\t\"getShiftFromSize\": getShiftFromSize,\n\t\t\t\t\"getTempRet0\": getTempRet0,\n\t\t\t\t\"getTypeName\": getTypeName,\n\t\t\t\t\"get_first_emval\": get_first_emval,\n\t\t\t\t\"heap32VectorToArray\": heap32VectorToArray,\n\t\t\t\t\"init_ClassHandle\": init_ClassHandle,\n\t\t\t\t\"init_RegisteredPointer\": init_RegisteredPointer,\n\t\t\t\t\"init_embind\": init_embind,\n\t\t\t\t\"init_emval\": init_emval,\n\t\t\t\t\"integerReadValueFromPointer\": integerReadValueFromPointer,\n\t\t\t\t\"jsStackTrace\": jsStackTrace,\n\t\t\t\t\"makeClassHandle\": makeClassHandle,\n\t\t\t\t\"makeLegalFunctionName\": makeLegalFunctionName,\n\t\t\t\t\"memory\": wasmMemory,\n\t\t\t\t\"new_\": new_,\n\t\t\t\t\"nonConstNoSmartPtrRawPointerToWireType\": nonConstNoSmartPtrRawPointerToWireType,\n\t\t\t\t\"readLatin1String\": readLatin1String,\n\t\t\t\t\"registerType\": registerType,\n\t\t\t\t\"releaseClassHandle\": releaseClassHandle,\n\t\t\t\t\"replacePublicSymbol\": replacePublicSymbol,\n\t\t\t\t\"requireRegisteredType\": requireRegisteredType,\n\t\t\t\t\"runDestructor\": runDestructor,\n\t\t\t\t\"runDestructors\": runDestructors,\n\t\t\t\t\"setDelayFunction\": setDelayFunction,\n\t\t\t\t\"setTempRet0\": setTempRet0,\n\t\t\t\t\"shallowCopyInternalPointer\": shallowCopyInternalPointer,\n\t\t\t\t\"simpleReadValueFromPointer\": simpleReadValueFromPointer,\n\t\t\t\t\"stackTrace\": stackTrace,\n\t\t\t\t\"table\": wasmTable,\n\t\t\t\t\"tempDoublePtr\": tempDoublePtr,\n\t\t\t\t\"throwBindingError\": throwBindingError,\n\t\t\t\t\"throwInstanceAlreadyDeleted\": throwInstanceAlreadyDeleted,\n\t\t\t\t\"throwInternalError\": throwInternalError,\n\t\t\t\t\"throwUnboundTypeError\": throwUnboundTypeError,\n\t\t\t\t\"upcastPointer\": upcastPointer,\n\t\t\t\t\"whenDependentTypesAreResolved\": whenDependentTypesAreResolved\n\t\t\t};\n\t\t\tvar asm = Module[\"asm\"](asmGlobalArg, asmLibraryArg, buffer);\n\t\t\tModule[\"asm\"] = asm;\n\t\t\tvar __ZSt18uncaught_exceptionv = Module[\"__ZSt18uncaught_exceptionv\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"__ZSt18uncaught_exceptionv\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar ___cxa_can_catch = Module[\"___cxa_can_catch\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"___cxa_can_catch\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar ___cxa_is_pointer_type = Module[\"___cxa_is_pointer_type\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"___cxa_is_pointer_type\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"___embind_register_native_and_builtin_types\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar ___getTypeName = Module[\"___getTypeName\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"___getTypeName\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar __get_environ = Module[\"__get_environ\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"__get_environ\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar _emscripten_get_sbrk_ptr = Module[\"_emscripten_get_sbrk_ptr\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"_emscripten_get_sbrk_ptr\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar _emscripten_replace_memory = Module[\"_emscripten_replace_memory\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"_emscripten_replace_memory\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar _free = Module[\"_free\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"_free\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar _malloc = Module[\"_malloc\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"_malloc\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar _memcpy = Module[\"_memcpy\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"_memcpy\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar _memset = Module[\"_memset\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"_memset\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar _rintf = Module[\"_rintf\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"_rintf\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar establishStackSpace = Module[\"establishStackSpace\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"establishStackSpace\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar globalCtors = Module[\"globalCtors\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"globalCtors\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar stackAlloc = Module[\"stackAlloc\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"stackAlloc\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar stackRestore = Module[\"stackRestore\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"stackRestore\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar stackSave = Module[\"stackSave\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"stackSave\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_fi = Module[\"dynCall_fi\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_fi\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_i = Module[\"dynCall_i\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_i\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_ii = Module[\"dynCall_ii\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_ii\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_iidiiii\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_iii = Module[\"dynCall_iii\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_iii\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_iiii = Module[\"dynCall_iiii\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_iiii\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_iiiii\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_iiiiii\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_iiiiiii\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_iiiiiiii\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_iiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiii\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_iiiiiiiiiiii\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_iiji = Module[\"dynCall_iiji\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_iiji\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_iji = Module[\"dynCall_iji\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_iji\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_jiji = Module[\"dynCall_jiji\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_jiji\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_jji = Module[\"dynCall_jji\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_jji\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_v = Module[\"dynCall_v\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_v\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_vi = Module[\"dynCall_vi\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_vi\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_vii = Module[\"dynCall_vii\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_vii\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_viif = Module[\"dynCall_viif\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_viif\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_viii = Module[\"dynCall_viii\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_viii\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_viiif = Module[\"dynCall_viiif\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_viiif\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_viiii = Module[\"dynCall_viiii\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_viiii\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_viiiii\"].apply(null, arguments)\n\t\t\t};\n\t\t\tvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = function () {\n\t\t\t\treturn Module[\"asm\"][\"dynCall_viiiiii\"].apply(null, arguments)\n\t\t\t};\n\t\t\tModule[\"asm\"] = asm;\n\t\t\tModule[\"ccall\"] = ccall;\n\t\t\tvar calledRun;\n\t\t\tModule[\"then\"] = function (func) {\n\t\t\t\tif (calledRun) {\n\t\t\t\t\tfunc(Module)\n\t\t\t\t} else {\n\t\t\t\t\tvar old = Module[\"onRuntimeInitialized\"];\n\t\t\t\t\tModule[\"onRuntimeInitialized\"] = function () {\n\t\t\t\t\t\tif (old) old();\n\t\t\t\t\t\tfunc(Module)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn Module\n\t\t\t};\n\n\t\t\tfunction ExitStatus(status) {\n\t\t\t\tthis.name = \"ExitStatus\";\n\t\t\t\tthis.message = \"Program terminated with exit(\" + status + \")\";\n\t\t\t\tthis.status = status\n\t\t\t}\n\t\t\tdependenciesFulfilled = function runCaller() {\n\t\t\t\tif (!calledRun) run();\n\t\t\t\tif (!calledRun) dependenciesFulfilled = runCaller\n\t\t\t};\n\n\t\t\tfunction run(args) {\n\t\t\t\targs = args || arguments_;\n\t\t\t\tif (runDependencies > 0) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tpreRun();\n\t\t\t\tif (runDependencies > 0) return;\n\n\t\t\t\tfunction doRun() {\n\t\t\t\t\tif (calledRun) return;\n\t\t\t\t\tcalledRun = true;\n\t\t\t\t\tif (ABORT) return;\n\t\t\t\t\tinitRuntime();\n\t\t\t\t\tpreMain();\n\t\t\t\t\tif (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n\t\t\t\t\tpostRun()\n\t\t\t\t}\n\t\t\t\tif (Module[\"setStatus\"]) {\n\t\t\t\t\tModule[\"setStatus\"](\"Running...\");\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\tModule[\"setStatus\"](\"\")\n\t\t\t\t\t\t}, 1);\n\t\t\t\t\t\tdoRun()\n\t\t\t\t\t}, 1)\n\t\t\t\t} else {\n\t\t\t\t\tdoRun()\n\t\t\t\t}\n\t\t\t}\n\t\t\tModule[\"run\"] = run;\n\t\t\tif (Module[\"preInit\"]) {\n\t\t\t\tif (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n\t\t\t\twhile (Module[\"preInit\"].length > 0) {\n\t\t\t\t\tModule[\"preInit\"].pop()()\n\t\t\t\t}\n\t\t\t}\n\t\t\tnoExitRuntime = true;\n\t\t\trun();\n\n\n\t\t\treturn OpenJPEGWASM\n\t\t}\n\t);\n})();\n\nexport default OpenJPEGWASM;\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;"],"names":["OpenJPEGWASM","_scriptDir","document","currentScript","src","undefined","key","Module","moduleOverrides","hasOwnProperty","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_HAS_NODE","ENVIRONMENT_IS_SHELL","thisProgram","window","importScripts","process","versions","node","globalThis","fetch","require","read_","readBinary","nodeFS","nodePath","scriptDirectory","__dirname","filename","binary","ret","buffer","Uint8Array","assert","length","replace","slice","ex","ExitStatus","abort","read","f","data","readbuffer","scriptArgs","print","console","log","warn","error","printErr","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","out","err","bind","asm2wasmImports","x","y","Array","wasmBinary","wasmMemory","tempRet0","WebAssembly","wasmTable","Table","ABORT","condition","text","getMemory","size","runtimeInitialized","_malloc","HEAP32","DYNAMICTOP_PTR","end","_emscripten_get_heap_size","dynamicAlloc","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","outU8Array","outIdx","maxBytesToWrite","startIdx","i","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","writeAsciiToMemory","dontAddNull","HEAP8","HEAP16","HEAPU16","HEAPU32","HEAPF32","HEAPF64","alignUp","multiple","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","STACK_BASE","INITIAL_TOTAL_MEMORY","callRuntimeCallbacks","callbacks","callback","shift","func","arg","Memory","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runDependencies","dependenciesFulfilled","what","RuntimeError","dataURIPrefix","isDataURI","prototype","startsWith","path","wasmBinaryFile","getBinary","info","asmLibraryArg","NaN","Infinity","Math","receiveInstance","instance","module","exports","id","removeRunDependency","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","Promise","resolve","reject","credentials","then","catch","instantiate","reason","e","instantiateStreaming","instantiateAsync","push","globalCtors","demangle","demangleAll","jsStackTrace","Error","stack","toString","ENV","___exception_infos","___exception_addRef","refcount","___exception_deAdjust","adjusted","adj","SYSCALLS","buffers","printChar","stream","curr","varargs","get","getStr","get64","low","getZero","_fd_close","fd","FS","ErrnoError","errno","_fd_seek","offset_low","offset_high","whence","newOffset","_fd_write","iov","iovcnt","pnum","num","j","structRegistrations","runDestructors","destructors","pop","del","simpleReadValueFromPointer","pointer","this","awaitingDependencies","registeredTypes","typeDependencies","makeLegalFunctionName","name","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","message","Object","create","constructor","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","forEach","type","unregisteredTypes","registered","dt","getShiftFromSize","TypeError","embind_init_charCodes","codes","embind_charCodes","readLatin1String","c","BindingError","throwBindingError","rawType","registeredInstance","options","ignoreDuplicateRegistrations","cb","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","left","rightClass","right","baseClass","upcast","shallowCopyInternalPointer","o","count","deleteScheduled","preservePointerOnDelete","smartPtr","smartPtrType","throwInstanceAlreadyDeleted","obj","finalizationGroup","detachFinalizer","handle","runDestructor","rawDestructor","releaseClassHandle","value","attachFinalizer","FinalizationGroup","iter","result","next","done","register","unregister","ClassHandle_clone","clone","getPrototypeOf","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","init_ClassHandle","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","arguments","apply","argCount","exposePublicSymbol","numArguments","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","__emval_register","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","rv","getInheritedInstanceCount","keys","registeredInstances","getLiveInheritedInstances","k","setDelayFunction","fn","init_embind","getBasestPointer","class_","getInheritedInstance","makeClassHandle","record","RegisteredPointer_fromWireType","rawPointer","getPointee","destructor","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","call","constPointerType","pointerType","dp","init_RegisteredPointer","RegisteredPointer","destructorFunction","replacePublicSymbol","embind__requireFunction","signature","rawFunction","fp","FUNCTION_TABLE","dc","dynCall","args","join","makeDynCaller","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","map","heap32VectorToArray","firstElement","array","new_","argumentList","dummy","r","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","init_emval","v","t","floatReadValueFromPointer","integerReadValueFromPointer","signed","requireRegisteredType","impl","emscripten_realloc_buffer","grow","___setErrNo","___buildEnvironment","environ","poolPtr","envPtr","called","navigator","languages","MAX_ENV_VALUES","strings","totalSize","line","caught","__ZSt18uncaught_exceptionv","uncaught_exceptions","rethrown","structType","reg","fieldRecords","fields","field","getterReturnType","concat","setterArgumentType","fieldTypes","fieldName","getter","getterContext","setter","setterContext","write","trueValue","falseValue","wt","heap","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","rawInvoker","context","isPureVirtual","unboundTypesHandler","method","className","memberFunction","primitiveType","minRange","maxRange","fromWireType","bitshift","isUnsignedType","dataTypeIndex","TA","decodeMemoryView","stdStringIsUTF8","endChar","endCharSwap","decodeStartPtr","currentBytePtr","stringSegment","a","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","charCode","charSize","getHeap","HEAP","start","constructorSignature","getterSignature","setterSignature","isVoid","argv","dest","set","requestedSize","oldSize","PAGE_MULTIPLE","LIMIT","newSize","max","min","_getenv","allocateUTF8","attr","maxHeapSize","fflush","js","asm","calledRun","stackAlloc","stackRestore","stackSave","status","run","doRun","unshift","postRun","preRun","setTimeout","ident","returnType","opts","toC","arr","writeArrayToMemory","getCFunc","cArgs","converter","Boolean","convertReturnValue","old","runCaller","global","getGlobal","Headers","Request","Response"],"sourceRoot":""}