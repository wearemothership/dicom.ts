function A(s,t){const{samples:r,size:m}=s,i=m.numberOfPixels,g=new ArrayBuffer(i*r),l=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),w=new Uint8Array(g);let n=0;const y=t.getInt32(0,!0),o=i*y;for(let e=0;e<y;++e){n=e;let f=t.getInt32((e+1)*4,!0),u=t.getInt32((e+2)*4,!0);u===0&&(u=t.byteLength);let b,a,h;for(;f<u;)if(h=l[f++],h<128)for(b=Math.min((h+1)*r+n,o);n<b;n+=r)w[n]=l[f++];else if(h>128)for(a=l[f++],b=Math.min((129-(h^128))*r+n,o);n<b;n+=r)w[n]=a}return new DataView(g,0,i*r)}function I(s,t){const{samples:r,size:m}=s,i=m.numberOfPixels*2,g=new ArrayBuffer(i*r),l=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),w=new Uint8Array(g),n=t.getInt32(0,!0);let y=0;for(let o=0;o<n;++o){let e=o===0?1:0,f=t.getInt32((o+1)*4,!0);y=t.getInt32((o+2)*4,!0),y===0&&(y=t.byteLength);let u,b,a;for(;f<y;)if(a=l[f++],a<128)for(u=Math.min((a+1)*2+e,i);e<u;e+=2)w[e]=l[f++];else if(a>128)for(b=l[f++],u=Math.min((129-(a^128))*2+e,i);e<u;e+=2)w[e]=b}return new DataView(g,0,i*r)}function c(s,t){const{bytesAllocated:r}=s;if(r===1)return A(s,t);if(r===2)return I(s,t);throw new Error("Unsupported data format for RLE")}export{c as default};
